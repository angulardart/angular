// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'encapsulation.dart';
import 'package:angular/src/reflector.dart' as _ngRef;
import 'encapsulation.template.dart' as _ref0;
import 'package:angular/src/core/linker/views/component_view.dart' as import0;
import 'encapsulation.dart' as import1;
import 'dart:html' as import2;
import 'package:angular/src/core/linker/style_encapsulation.dart' as import3;
import 'package:angular/src/core/linker/views/view.dart' as import4;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'package:angular/src/utilities.dart' as import6;
import 'package:angular/src/runtime/dom_helpers.dart' as import7;
import 'package:angular/src/runtime/check_binding.dart' as import8;
import 'package:angular/src/runtime/interpolate.dart' as import9;
import 'package:angular/angular.dart';
import 'package:angular/src/core/linker/views/host_view.dart' as import11;

final List<Object> styles$GoldenComponent = const [];

class ViewGoldenComponent0 extends import0.ComponentView<import1.GoldenComponent> {
  late final ViewNoEncapsulation0 _compView_0;
  late final import1.NoEncapsulation _NoEncapsulation_0_5;
  late final ViewEmulatedEncapsulation0 _compView_5;
  late final import1.EmulatedEncapsulation _EmulatedEncapsulation_5_5;
  Object? _expr_0;
  Object? _expr_1;
  Object? _expr_2;
  Object? _expr_3;
  Object? _expr_4;
  Object? _expr_5;
  Object? _expr_6;
  Object? _expr_7;
  late final import2.HtmlElement _el_3;
  late final import2.HtmlElement _el_8;
  static import3.ComponentStyles? _componentStyles;
  ViewGoldenComponent0(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.unsafeCast(import2.document.createElement('golden'));
  }
  static String? get _debugComponentUrl {
    return (import6.isDevMode ? 'asset:goldens/test/templates/encapsulation.dart' : null);
  }

  @override
  void build() {
    final parentRenderNode = this.initViewRoot();
    this._compView_0 = ViewNoEncapsulation0(this, 0);
    final _el_0 = this._compView_0.rootElement;
    parentRenderNode.append(_el_0);
    this._NoEncapsulation_0_5 = import1.NoEncapsulation();
    final doc = import2.document;
    final _el_1 = import6.unsafeCast(doc.createElement('div'));
    import7.setAttribute(_el_1, 'trailing', '');
    final _text_2 = import7.appendText(_el_1, 'Hello ');
    this._el_3 = import7.appendSpan(doc, _el_1);
    final _text_4 = import7.appendText(this._el_3, 'World!');
    this._compView_0.createAndProject(this._NoEncapsulation_0_5, [
      <Object>[_el_1]
    ]);
    this._compView_5 = ViewEmulatedEncapsulation0(this, 5);
    final _el_5 = this._compView_5.rootElement;
    parentRenderNode.append(_el_5);
    this._EmulatedEncapsulation_5_5 = import1.EmulatedEncapsulation();
    final _el_6 = import6.unsafeCast(doc.createElement('div'));
    import7.setAttribute(_el_6, 'trailing', '');
    final _text_7 = import7.appendText(_el_6, 'Hello ');
    this._el_8 = import7.appendSpan(doc, _el_6);
    final _text_9 = import7.appendText(this._el_8, 'World!');
    this._compView_5.createAndProject(this._EmulatedEncapsulation_5_5, [
      <Object>[_el_6]
    ]);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    final currVal_0 = _ctx.floatingLabel;
    if (import8.checkBinding(this._expr_0, currVal_0, 'floatingLabel', 'asset:goldens/test/templates/encapsulation.dart')) {
      this._NoEncapsulation_0_5.floatingLabel = currVal_0;
      this._expr_0 = currVal_0;
    }
    final currVal_1 = _ctx.trailingLabel;
    if (import8.checkBinding(this._expr_1, currVal_1, 'trailingLabel', 'asset:goldens/test/templates/encapsulation.dart')) {
      this._NoEncapsulation_0_5.trailingGlyphAriaLabel = currVal_1;
      this._expr_1 = currVal_1;
    }
    final currVal_2 = _ctx.disabled;
    if (import8.checkBinding(this._expr_2, currVal_2, 'disabled', 'asset:goldens/test/templates/encapsulation.dart')) {
      this._NoEncapsulation_0_5.disabled = currVal_2;
      this._expr_2 = currVal_2;
    }
    final currVal_4 = _ctx.floatingLabel;
    if (import8.checkBinding(this._expr_4, currVal_4, 'floatingLabel', 'asset:goldens/test/templates/encapsulation.dart')) {
      this._EmulatedEncapsulation_5_5.floatingLabel = currVal_4;
      this._expr_4 = currVal_4;
    }
    final currVal_5 = _ctx.trailingLabel;
    if (import8.checkBinding(this._expr_5, currVal_5, 'trailingLabel', 'asset:goldens/test/templates/encapsulation.dart')) {
      this._EmulatedEncapsulation_5_5.trailingGlyphAriaLabel = currVal_5;
      this._expr_5 = currVal_5;
    }
    final currVal_6 = _ctx.disabled;
    if (import8.checkBinding(this._expr_6, currVal_6, 'disabled', 'asset:goldens/test/templates/encapsulation.dart')) {
      this._EmulatedEncapsulation_5_5.disabled = currVal_6;
      this._expr_6 = currVal_6;
    }
    final currVal_3 = import9.interpolateString1('highlight ', _ctx.addClass, '');
    if (import8.checkBinding(this._expr_3, currVal_3, 'highlight {{addClass}}', 'asset:goldens/test/templates/encapsulation.dart')) {
      this.updateChildClass(this._el_3, currVal_3);
      this._expr_3 = currVal_3;
    }
    final currVal_7 = import9.interpolateString1('highlight ', _ctx.addClass, '');
    if (import8.checkBinding(this._expr_7, currVal_7, 'highlight {{addClass}}', 'asset:goldens/test/templates/encapsulation.dart')) {
      this.updateChildClass(this._el_8, currVal_7);
      this._expr_7 = currVal_7;
    }
    this._compView_0.detectChanges();
    this._compView_5.detectChanges();
  }

  @override
  void destroyInternal() {
    this._compView_0.destroyInternalState();
    this._compView_5.destroyInternalState();
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if ((styles == null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$GoldenComponent, _debugComponentUrl));
      if (import6.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const _GoldenComponentNgFactory = ComponentFactory<import1.GoldenComponent>('golden', viewFactory_GoldenComponentHost0);
ComponentFactory<import1.GoldenComponent> get GoldenComponentNgFactory {
  return _GoldenComponentNgFactory;
}

ComponentFactory<import1.GoldenComponent> createGoldenComponentFactory() {
  return ComponentFactory('golden', viewFactory_GoldenComponentHost0);
}

final List<Object> styles$GoldenComponentHost = const [];

class _ViewGoldenComponentHost0 extends import11.HostView<import1.GoldenComponent> {
  @override
  void build() {
    this.componentView = ViewGoldenComponent0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.GoldenComponent();
    this.initRootNode(_el_0);
  }
}

import11.HostView<import1.GoldenComponent> viewFactory_GoldenComponentHost0() {
  return _ViewGoldenComponentHost0();
}

final List<Object> styles$NoEncapsulation = ['    :host {\n      display: inline-flex;\n    }\n    :host(.ltr) .top-section {\n      /*! @noflip */\n      direction: ltr;\n    }\n    [trailing] {\n      font-weight: bold;\n    }\n    ::ng-deep .link {\n      text-decoration: none;\n    }\n    .has-links ::ng-deep .link {\n      text-decoration: none;\n    }\n    '];

class ViewNoEncapsulation0 extends import0.ComponentView<import1.NoEncapsulation> {
  Object? _expr_0;
  Object? _expr_1;
  Object? _expr_2;
  late final import2.HtmlElement _el_0;
  late final import2.DivElement _el_1;
  static import3.ComponentStyles? _componentStyles;
  ViewNoEncapsulation0(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.unsafeCast(import2.document.createElement('no-encapsulation'));
  }
  static String? get _debugComponentUrl {
    return (import6.isDevMode ? 'asset:goldens/test/templates/encapsulation.dart' : null);
  }

  @override
  void build() {
    final parentRenderNode = this.initViewRoot();
    final doc = import2.document;
    this._el_0 = import7.appendSpan(doc, parentRenderNode);
    this.updateChildClass(this._el_0, 'trailing-text');
    this._el_1 = import7.appendDiv(doc, this._el_0);
    this.updateChildClass(this._el_1, 'glyph trailing');
    final _text_2 = import7.appendText(parentRenderNode, ' ');
    this.project(parentRenderNode, 0);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    final currVal_0 = _ctx.floatingLabel;
    if (import8.checkBinding(this._expr_0, currVal_0, 'floatingLabel', 'asset:goldens/test/templates/encapsulation.dart')) {
      import7.updateClassBinding(this._el_0, 'floated-label', currVal_0);
      this._expr_0 = currVal_0;
    }
    final currVal_1 = _ctx.trailingGlyphAriaLabel;
    if (import8.checkBinding(this._expr_1, currVal_1, 'trailingGlyphAriaLabel', 'asset:goldens/test/templates/encapsulation.dart')) {
      import7.updateAttribute(this._el_1, 'aria-label', currVal_1);
      this._expr_1 = currVal_1;
    }
    final currVal_2 = _ctx.disabled;
    if (import8.checkBinding(this._expr_2, currVal_2, 'disabled', 'asset:goldens/test/templates/encapsulation.dart')) {
      import7.updateAttribute(this._el_1, 'disabled', (currVal_2 ? '' : null));
      this._expr_2 = currVal_2;
    }
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if ((styles == null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$NoEncapsulation, _debugComponentUrl));
      if (import6.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const _NoEncapsulationNgFactory = ComponentFactory<import1.NoEncapsulation>('no-encapsulation', viewFactory_NoEncapsulationHost0);
ComponentFactory<import1.NoEncapsulation> get NoEncapsulationNgFactory {
  return _NoEncapsulationNgFactory;
}

ComponentFactory<import1.NoEncapsulation> createNoEncapsulationFactory() {
  return ComponentFactory('no-encapsulation', viewFactory_NoEncapsulationHost0);
}

final List<Object> styles$NoEncapsulationHost = const [];

class _ViewNoEncapsulationHost0 extends import11.HostView<import1.NoEncapsulation> {
  @override
  void build() {
    this.componentView = ViewNoEncapsulation0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.NoEncapsulation();
    this.initRootNode(_el_0);
  }
}

import11.HostView<import1.NoEncapsulation> viewFactory_NoEncapsulationHost0() {
  return _ViewNoEncapsulationHost0();
}

final List<Object> styles$EmulatedEncapsulation = ['._nghost-%ID%{display:inline-flex}._nghost-%ID%.ltr .top-section._ngcontent-%ID%{direction:ltr}[trailing]._ngcontent-%ID%{font-weight:bold} .link{text-decoration:none}.has-links._ngcontent-%ID%  .link{text-decoration:none}'];

class ViewEmulatedEncapsulation0 extends import0.ComponentView<import1.EmulatedEncapsulation> {
  Object? _expr_0;
  Object? _expr_1;
  Object? _expr_2;
  late final import2.HtmlElement _el_0;
  late final import2.DivElement _el_1;
  static import3.ComponentStyles? _componentStyles;
  ViewEmulatedEncapsulation0(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.unsafeCast(import2.document.createElement('emulated-encapsulation'));
  }
  static String? get _debugComponentUrl {
    return (import6.isDevMode ? 'asset:goldens/test/templates/encapsulation.dart' : null);
  }

  @override
  void build() {
    final parentRenderNode = this.initViewRoot();
    final doc = import2.document;
    this._el_0 = import7.appendSpan(doc, parentRenderNode);
    this.updateChildClass(this._el_0, 'trailing-text');
    this.addShimC(this._el_0);
    this._el_1 = import7.appendDiv(doc, this._el_0);
    this.updateChildClass(this._el_1, 'glyph trailing');
    this.addShimC(this._el_1);
    final _text_2 = import7.appendText(parentRenderNode, ' ');
    this.project(parentRenderNode, 0);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    final currVal_0 = _ctx.floatingLabel;
    if (import8.checkBinding(this._expr_0, currVal_0, 'floatingLabel', 'asset:goldens/test/templates/encapsulation.dart')) {
      import7.updateClassBinding(this._el_0, 'floated-label', currVal_0);
      this._expr_0 = currVal_0;
    }
    final currVal_1 = _ctx.trailingGlyphAriaLabel;
    if (import8.checkBinding(this._expr_1, currVal_1, 'trailingGlyphAriaLabel', 'asset:goldens/test/templates/encapsulation.dart')) {
      import7.updateAttribute(this._el_1, 'aria-label', currVal_1);
      this._expr_1 = currVal_1;
    }
    final currVal_2 = _ctx.disabled;
    if (import8.checkBinding(this._expr_2, currVal_2, 'disabled', 'asset:goldens/test/templates/encapsulation.dart')) {
      import7.updateAttribute(this._el_1, 'disabled', (currVal_2 ? '' : null));
      this._expr_2 = currVal_2;
    }
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if ((styles == null)) {
      _componentStyles = (styles = import3.ComponentStyles.scoped(styles$EmulatedEncapsulation, _debugComponentUrl));
      if (import6.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const _EmulatedEncapsulationNgFactory = ComponentFactory<import1.EmulatedEncapsulation>('emulated-encapsulation', viewFactory_EmulatedEncapsulationHost0);
ComponentFactory<import1.EmulatedEncapsulation> get EmulatedEncapsulationNgFactory {
  return _EmulatedEncapsulationNgFactory;
}

ComponentFactory<import1.EmulatedEncapsulation> createEmulatedEncapsulationFactory() {
  return ComponentFactory('emulated-encapsulation', viewFactory_EmulatedEncapsulationHost0);
}

final List<Object> styles$EmulatedEncapsulationHost = const [];

class _ViewEmulatedEncapsulationHost0 extends import11.HostView<import1.EmulatedEncapsulation> {
  @override
  void build() {
    this.componentView = ViewEmulatedEncapsulation0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.EmulatedEncapsulation();
    this.initRootNode(_el_0);
  }
}

import11.HostView<import1.EmulatedEncapsulation> viewFactory_EmulatedEncapsulationHost0() {
  return _ViewEmulatedEncapsulationHost0();
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(GoldenComponent, createGoldenComponentFactory());
  _ngRef.registerComponent(NoEncapsulation, createNoEncapsulationFactory());
  _ngRef.registerComponent(EmulatedEncapsulation, createEmulatedEncapsulationFactory());
  _ref0.initReflector();
}

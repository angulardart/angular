// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'intl_component.dart';
export 'intl_component.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/core/linker/views/component_view.dart' as import0;
import 'intl_component.dart' as import1;
import 'package:angular/src/runtime/text_binding.dart' as import2;
import 'package:angular/src/core/linker/style_encapsulation.dart' as import3;
import 'package:angular/src/core/linker/views/view.dart' as import4;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'dart:html' as import6;
import 'package:angular/src/runtime.dart' as import7;
import 'package:angular/src/runtime/dom_helpers.dart' as import8;
import 'package:angular/src/runtime/interpolate.dart' as import9;
import 'package:angular/angular.dart';
import 'package:angular/src/core/linker/views/host_view.dart' as import11;

final List<dynamic> styles$CompWithoutFinal = const [];

class ViewCompWithoutFinal0 extends import0.ComponentView<import1.CompWithoutFinal> {
  final import2.TextBinding _textBinding_1 = import2.TextBinding();
  final import2.TextBinding _textBinding_4 = import2.TextBinding();
  static import3.ComponentStyles _componentStyles;
  ViewCompWithoutFinal0(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('comp-without-final');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/files/directives/intl_component.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    final doc = import6.document;
    final _el_0 = import8.appendElement(doc, parentRenderNode, 'button');
    _el_0.append(this._textBinding_1.element);
    final _text_2 = import8.appendText(parentRenderNode, ' ');
    final _el_3 = import8.appendElement(doc, parentRenderNode, 'button');
    _el_3.append(this._textBinding_4.element);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    this._textBinding_1.updateText(import9.interpolateString0(_ctx.okMessage));
    this._textBinding_4.updateText(import9.interpolateString0(_ctx.cancelMessage));
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$CompWithoutFinal, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const _CompWithoutFinalNgFactory = ComponentFactory<import1.CompWithoutFinal>('comp-without-final', viewFactory_CompWithoutFinalHost0);
ComponentFactory<import1.CompWithoutFinal> get CompWithoutFinalNgFactory {
  return _CompWithoutFinalNgFactory;
}

ComponentFactory<import1.CompWithoutFinal> createCompWithoutFinalFactory() {
  return ComponentFactory('comp-without-final', viewFactory_CompWithoutFinalHost0);
}

final List<dynamic> styles$CompWithoutFinalHost = const [];

class _ViewCompWithoutFinalHost0 extends import11.HostView<import1.CompWithoutFinal> {
  @override
  void build() {
    this.componentView = ViewCompWithoutFinal0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.CompWithoutFinal();
    this.initRootNode(_el_0);
  }
}

import11.HostView<import1.CompWithoutFinal> viewFactory_CompWithoutFinalHost0() {
  return _ViewCompWithoutFinalHost0();
}

final List<dynamic> styles$CompWithFinal = const [];

class ViewCompWithFinal0 extends import0.ComponentView<import1.CompWithFinal> {
  static import3.ComponentStyles _componentStyles;
  ViewCompWithFinal0(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('comp-with-final');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/files/directives/intl_component.dart' : null);
  }

  @override
  void build() {
    final _ctx = this.ctx;
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    final doc = import6.document;
    final _el_0 = import8.appendElement(doc, parentRenderNode, 'button');
    final _text_1 = import8.appendText(_el_0, import9.interpolateString0(_ctx.okMessage));
    final _text_2 = import8.appendText(parentRenderNode, ' ');
    final _el_3 = import8.appendElement(doc, parentRenderNode, 'button');
    final _text_4 = import8.appendText(_el_3, import9.interpolateString0(_ctx.cancelMessage));
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$CompWithFinal, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const _CompWithFinalNgFactory = ComponentFactory<import1.CompWithFinal>('comp-with-final', viewFactory_CompWithFinalHost0);
ComponentFactory<import1.CompWithFinal> get CompWithFinalNgFactory {
  return _CompWithFinalNgFactory;
}

ComponentFactory<import1.CompWithFinal> createCompWithFinalFactory() {
  return ComponentFactory('comp-with-final', viewFactory_CompWithFinalHost0);
}

final List<dynamic> styles$CompWithFinalHost = const [];

class _ViewCompWithFinalHost0 extends import11.HostView<import1.CompWithFinal> {
  @override
  void build() {
    this.componentView = ViewCompWithFinal0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.CompWithFinal();
    this.initRootNode(_el_0);
  }
}

import11.HostView<import1.CompWithFinal> viewFactory_CompWithFinalHost0() {
  return _ViewCompWithFinalHost0();
}

final List<dynamic> styles$CompWithFinalStatic = const [];

class ViewCompWithFinalStatic0 extends import0.ComponentView<import1.CompWithFinalStatic> {
  static import3.ComponentStyles _componentStyles;
  ViewCompWithFinalStatic0(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('comp-with-final-static');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/files/directives/intl_component.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    final doc = import6.document;
    final _el_0 = import8.appendElement(doc, parentRenderNode, 'button');
    final _text_1 = import8.appendText(_el_0, import9.interpolateString0(import1.CompWithFinalStatic.okMessage));
    final _text_2 = import8.appendText(parentRenderNode, ' ');
    final _el_3 = import8.appendElement(doc, parentRenderNode, 'button');
    final _text_4 = import8.appendText(_el_3, import9.interpolateString0(import1.CompWithFinalStatic.cancelMessage));
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$CompWithFinalStatic, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const _CompWithFinalStaticNgFactory = ComponentFactory<import1.CompWithFinalStatic>('comp-with-final-static', viewFactory_CompWithFinalStaticHost0);
ComponentFactory<import1.CompWithFinalStatic> get CompWithFinalStaticNgFactory {
  return _CompWithFinalStaticNgFactory;
}

ComponentFactory<import1.CompWithFinalStatic> createCompWithFinalStaticFactory() {
  return ComponentFactory('comp-with-final-static', viewFactory_CompWithFinalStaticHost0);
}

final List<dynamic> styles$CompWithFinalStaticHost = const [];

class _ViewCompWithFinalStaticHost0 extends import11.HostView<import1.CompWithFinalStatic> {
  @override
  void build() {
    this.componentView = ViewCompWithFinalStatic0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.CompWithFinalStatic();
    this.initRootNode(_el_0);
  }
}

import11.HostView<import1.CompWithFinalStatic> viewFactory_CompWithFinalStaticHost0() {
  return _ViewCompWithFinalStaticHost0();
}

final List<dynamic> styles$CompWithExternalFinal = const [];

class ViewCompWithExternalFinal0 extends import0.ComponentView<import1.CompWithExternalFinal> {
  static import3.ComponentStyles _componentStyles;
  ViewCompWithExternalFinal0(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('comp-with-external-final');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/files/directives/intl_component.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    final doc = import6.document;
    final _el_0 = import8.appendElement(doc, parentRenderNode, 'button');
    final _text_1 = import8.appendText(_el_0, import9.interpolateString0(import1.Messages.okMessage));
    final _text_2 = import8.appendText(parentRenderNode, ' ');
    final _el_3 = import8.appendElement(doc, parentRenderNode, 'button');
    final _text_4 = import8.appendText(_el_3, import9.interpolateString0(import1.Messages.cancelMessage));
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$CompWithExternalFinal, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const _CompWithExternalFinalNgFactory = ComponentFactory<import1.CompWithExternalFinal>('comp-with-external-final', viewFactory_CompWithExternalFinalHost0);
ComponentFactory<import1.CompWithExternalFinal> get CompWithExternalFinalNgFactory {
  return _CompWithExternalFinalNgFactory;
}

ComponentFactory<import1.CompWithExternalFinal> createCompWithExternalFinalFactory() {
  return ComponentFactory('comp-with-external-final', viewFactory_CompWithExternalFinalHost0);
}

final List<dynamic> styles$CompWithExternalFinalHost = const [];

class _ViewCompWithExternalFinalHost0 extends import11.HostView<import1.CompWithExternalFinal> {
  @override
  void build() {
    this.componentView = ViewCompWithExternalFinal0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.CompWithExternalFinal();
    this.initRootNode(_el_0);
  }
}

import11.HostView<import1.CompWithExternalFinal> viewFactory_CompWithExternalFinalHost0() {
  return _ViewCompWithExternalFinalHost0();
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(CompWithoutFinal, createCompWithoutFinalFactory());
  _ngRef.registerComponent(CompWithFinal, createCompWithFinalFactory());
  _ngRef.registerComponent(CompWithFinalStatic, createCompWithFinalStaticFactory());
  _ngRef.registerComponent(CompWithExternalFinal, createCompWithExternalFinalFactory());
  _ref0.initReflector();
}

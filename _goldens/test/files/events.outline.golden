// ignore_for_file: library_prefixes,unused_import,strict_raw_type,undefined_hidden_name
// The .template.dart files also export the user code.
export 'events.dart';

// Required for referencing runtime code.
import 'dart:html' as _html;
import 'package:angular/angular.dart' as _ng;
import 'package:angular/src/core/change_detection/directive_change_detector.dart' as _ng;
import 'package:angular/src/core/linker/views/component_view.dart' as _ng;
import 'package:angular/src/core/linker/views/render_view.dart' as _ng;
import 'package:angular/src/core/linker/views/view.dart' as _ng;

// Required for specifically referencing user code.
import 'events.dart';

// Required for "type inference" (scoping).
import 'dart:async';
import 'package:angular/angular.dart';

// For @Component class UsesNativeEvents.
external List<dynamic> get styles$UsesNativeEvents;
external _ng.ComponentFactory<UsesNativeEvents> get UsesNativeEventsNgFactory;
external _ng.ComponentFactory<UsesNativeEvents> createUsesNativeEventsFactory();
class ViewUsesNativeEvents0 extends _ng.ComponentView<UsesNativeEvents> {
  external ViewUsesNativeEvents0(_ng.View parentView, int parentIndex);
}
// For @Component class UsesAngularEvents.
external List<dynamic> get styles$UsesAngularEvents;
external _ng.ComponentFactory<UsesAngularEvents> get UsesAngularEventsNgFactory;
external _ng.ComponentFactory<UsesAngularEvents> createUsesAngularEventsFactory();
class ViewUsesAngularEvents0 extends _ng.ComponentView<UsesAngularEvents> {
  external ViewUsesAngularEvents0(_ng.View parentView, int parentIndex);
}
// For @Component class HasAngularEvents.
external List<dynamic> get styles$HasAngularEvents;
external _ng.ComponentFactory<HasAngularEvents> get HasAngularEventsNgFactory;
external _ng.ComponentFactory<HasAngularEvents> createHasAngularEventsFactory();
class ViewHasAngularEvents0 extends _ng.ComponentView<HasAngularEvents> {
  external ViewHasAngularEvents0(_ng.View parentView, int parentIndex);
}
// For @Component class HasManyNativeHostEvents.
external List<dynamic> get styles$HasManyNativeHostEvents;
external _ng.ComponentFactory<HasManyNativeHostEvents> get HasManyNativeHostEventsNgFactory;
external _ng.ComponentFactory<HasManyNativeHostEvents> createHasManyNativeHostEventsFactory();
class ViewHasManyNativeHostEvents0 extends _ng.ComponentView<HasManyNativeHostEvents> {
  external ViewHasManyNativeHostEvents0(_ng.View parentView, int parentIndex);
}

external void initReflector();

// ignore_for_file: library_prefixes,unused_import,strict_raw_type,undefined_hidden_name
// The .template.dart files also export the user code.
export 'on_push_queries.dart';

// Required for referencing runtime code.
import 'dart:html' as _html;
import 'package:angular/angular.dart' as _ng;
import 'package:angular/src/core/change_detection/directive_change_detector.dart' as _ng;
import 'package:angular/src/core/linker/views/component_view.dart' as _ng;
import 'package:angular/src/core/linker/views/render_view.dart' as _ng;
import 'package:angular/src/core/linker/views/view.dart' as _ng;

// Required for specifically referencing user code.
import 'on_push_queries.dart';

// Required for "type inference" (scoping).
import 'package:angular/angular.dart';

// For @Component class Child.
external List<dynamic> get styles$Child;
external _ng.ComponentFactory<Child> get ChildNgFactory;
external _ng.ComponentFactory<Child> createChildFactory();
class ViewChild0 extends _ng.ComponentView<Child> {
  external ViewChild0(_ng.View parentView, int parentIndex);
}
// For @Component class Query.
external List<dynamic> get styles$Query;
external _ng.ComponentFactory<Query> get QueryNgFactory;
external _ng.ComponentFactory<Query> createQueryFactory();
class ViewQuery0 extends _ng.ComponentView<Query> {
  external ViewQuery0(_ng.View parentView, int parentIndex);
}
// For @Component class Test.
external List<dynamic> get styles$Test;
external _ng.ComponentFactory<Test> get TestNgFactory;
external _ng.ComponentFactory<Test> createTestFactory();
class ViewTest0 extends _ng.ComponentView<Test> {
  external ViewTest0(_ng.View parentView, int parentIndex);
}

external void initReflector();

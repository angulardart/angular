// ignore_for_file: library_prefixes,unused_import,strict_raw_type,undefined_hidden_name
// The .template.dart files also export the user code.
export 'injector_get_internal.dart';

// Required for referencing runtime code.
import 'dart:html' as _html;
import 'package:angular/angular.dart' as _ng;
import 'package:angular/src/core/change_detection/directive_change_detector.dart' as _ng;
import 'package:angular/src/core/linker/views/component_view.dart' as _ng;
import 'package:angular/src/core/linker/views/render_view.dart' as _ng;
import 'package:angular/src/core/linker/views/view.dart' as _ng;

// Required for specifically referencing user code.
import 'injector_get_internal.dart';

// Required for "type inference" (scoping).
import 'package:angular/angular.dart';

// For @Component class AppComponent.
external List<dynamic> get styles$AppComponent;
external _ng.ComponentFactory<AppComponent> get AppComponentNgFactory;
external _ng.ComponentFactory<AppComponent> createAppComponentFactory();
class ViewAppComponent0 extends _ng.ComponentView<AppComponent> {
  external ViewAppComponent0(_ng.View parentView, int parentIndex);
}
// For @Component class MaterialAutoSuggestInputComponent.
external List<dynamic> get styles$MaterialAutoSuggestInputComponent;
external _ng.ComponentFactory<MaterialAutoSuggestInputComponent> get MaterialAutoSuggestInputComponentNgFactory;
external _ng.ComponentFactory<MaterialAutoSuggestInputComponent> createMaterialAutoSuggestInputComponentFactory();
class ViewMaterialAutoSuggestInputComponent0 extends _ng.ComponentView<MaterialAutoSuggestInputComponent> {
  external ViewMaterialAutoSuggestInputComponent0(_ng.View parentView, int parentIndex);
}
// For @Component class MaterialIcon.
external List<dynamic> get styles$MaterialIcon;
external _ng.ComponentFactory<MaterialIcon> get MaterialIconNgFactory;
external _ng.ComponentFactory<MaterialIcon> createMaterialIconFactory();
class ViewMaterialIcon0 extends _ng.ComponentView<MaterialIcon> {
  external ViewMaterialIcon0(_ng.View parentView, int parentIndex);
}
// For @Component class MaterialInputComponent.
external List<dynamic> get styles$MaterialInputComponent;
external _ng.ComponentFactory<MaterialInputComponent> get MaterialInputComponentNgFactory;
external _ng.ComponentFactory<MaterialInputComponent> createMaterialInputComponentFactory();
class ViewMaterialInputComponent0 extends _ng.ComponentView<MaterialInputComponent> {
  external ViewMaterialInputComponent0(_ng.View parentView, int parentIndex);
}
// For @Directive class NgForm.
class NgFormNgCd extends _ng.DirectiveChangeDetector {
  external NgForm get instance;
  external void deliverChanges();
  external NgFormNgCd(NgForm instance);
  external void detectHostChanges(_ng.RenderView view, _html.Element hostElement);
}
// For @Directive class NgControlName.
class NgControlNameNgCd extends _ng.DirectiveChangeDetector {
  external NgControlName get instance;
  external void deliverChanges();
  external NgControlNameNgCd(NgControlName instance);
  external void detectHostChanges(_ng.RenderView view, _html.Element hostElement);
}
// For @Directive class NgControlGroup.
class NgControlGroupNgCd extends _ng.DirectiveChangeDetector {
  external NgControlGroup get instance;
  external void deliverChanges();
  external NgControlGroupNgCd(NgControlGroup instance);
  external void detectHostChanges(_ng.RenderView view, _html.Element hostElement);
}
// For @Directive class RequiredValidator.
class RequiredValidatorNgCd extends _ng.DirectiveChangeDetector {
  external RequiredValidator get instance;
  external void deliverChanges();
  external RequiredValidatorNgCd(RequiredValidator instance);
  external void detectHostChanges(_ng.RenderView view, _html.Element hostElement);
}
// For @Directive class MaterialInputValueAccessor.
class MaterialInputValueAccessorNgCd extends _ng.DirectiveChangeDetector {
  external MaterialInputValueAccessor get instance;
  external void deliverChanges();
  external MaterialInputValueAccessorNgCd(MaterialInputValueAccessor instance);
  external void detectHostChanges(_ng.RenderView view, _html.Element hostElement);
}

external void initReflector();

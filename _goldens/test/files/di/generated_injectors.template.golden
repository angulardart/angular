// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'generated_injectors.dart';
export 'generated_injectors.dart';
import 'generated_injectors.template.dart' as _ref0;
import 'package:angular/angular.template.dart' as _ref1;
import 'package:angular/src/di/injector/injector.dart' as _i1;
import 'package:angular/src/di/injector/hierarchical.dart' as _i2;
import 'generated_injectors.dart' as _i3;
import 'package:angular_compiler/v1/src/metadata/di_tokens.dart' as _i4;

_i1.Injector doGenerate$Injector([_i1.Injector parent]) => _Injector$doGenerate._(parent);

class _Injector$doGenerate extends _i2.HierarchicalInjector implements _i1.Injector {
  _Injector$doGenerate._([_i1.Injector parent]) : super(parent);

  _i3.Example _field8;

  dynamic _getdynamic$0() => r'ABC123';
  dynamic _getdynamic$1() => const {r'instanceOfExample': _i3.Example(), _i3.instanceOfExamplePrime: r'instanceOfExamplePrime'};
  dynamic _getdynamic$2() => const [_i3.Example(), _i3.instanceOfExamplePrime, _i3.ExampleTheta.instance];
  dynamic _getdynamic$3() => _i3.ExampleTheta.instance;
  dynamic _getdynamic$4() => _i3.instanceOfExamplePrime;
  dynamic _getdynamic$5() => const _i3.Example();
  String _getString$6() => r'String';
  String _getString$7() => r'dynamic';
  _i3.Example _getExample$8() => _field8 ??= _i3.Example();
  String _getString$9() => r'A';
  String _getString$10() => r'B';
  _i1.Injector _getInjector$11() => this;
  @override
  Object injectFromSelfOptional(Object token, [Object orElse = _i1.throwIfNotFound]) {
    if (identical(token, const _i3.XsrfToken())) {
      return _getdynamic$0();
    }
    if (identical(token, const _i4.OpaqueToken<dynamic>('arbitraryToken5'))) {
      return _getdynamic$1();
    }
    if (identical(token, const _i4.OpaqueToken<dynamic>('arbitraryToken4'))) {
      return _getdynamic$2();
    }
    if (identical(token, const _i4.OpaqueToken<dynamic>('arbitraryToken3'))) {
      return _getdynamic$3();
    }
    if (identical(token, const _i4.OpaqueToken<dynamic>('arbitraryToken2'))) {
      return _getdynamic$4();
    }
    if (identical(token, const _i4.OpaqueToken<dynamic>('arbitraryToken1'))) {
      return _getdynamic$5();
    }
    if (identical(token, const _i4.OpaqueToken<String>('someToken'))) {
      return _getString$6();
    }
    if (identical(token, const _i4.OpaqueToken<dynamic>('someToken'))) {
      return _getString$7();
    }
    if (identical(token, _i3.Example)) {
      return _getExample$8();
    }
    if (identical(token, _i1.Injector)) {
      return _getInjector$11();
    }
    if (identical(token, const _i4.MultiToken<dynamic>('someMultiToken'))) {
      return [_getString$9(), _getString$10()];
    }
    return orElse;
  }
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ref0.initReflector();
  _ref1.initReflector();
}

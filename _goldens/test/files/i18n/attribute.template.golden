// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'attribute.dart';
export 'attribute.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/core/linker/views/component_view.dart' as import0;
import 'attribute.dart' as import1;
import 'package:intl/intl.dart' as import2;
import 'package:angular/src/core/linker/style_encapsulation.dart' as import3;
import 'package:angular/src/core/linker/views/view.dart' as import4;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'dart:html' as import6;
import 'package:angular/src/runtime.dart' as import7;
import 'package:angular/src/runtime/dom_helpers.dart' as import8;
import 'package:angular/angular.dart';
import 'package:angular/src/core/linker/views/host_view.dart' as import10;

final List<dynamic> styles$I18nAttributeComponent = const [];

class ViewI18nAttributeComponent0 extends import0.ComponentView<import1.I18nAttributeComponent> {
  static final String _message_0 = import2.Intl.message('message', desc: 'description');
  static import3.ComponentStyles _componentStyles;
  ViewI18nAttributeComponent0(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('message');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/files/i18n/attribute.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    final doc = import6.document;
    final _el_0 = import8.appendElement(doc, parentRenderNode, 'img');
    import8.setAttribute(_el_0, 'alt', _message_0);
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$I18nAttributeComponent, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const _I18nAttributeComponentNgFactory = ComponentFactory<import1.I18nAttributeComponent>('message', viewFactory_I18nAttributeComponentHost0);
ComponentFactory<import1.I18nAttributeComponent> get I18nAttributeComponentNgFactory {
  return _I18nAttributeComponentNgFactory;
}

ComponentFactory<import1.I18nAttributeComponent> createI18nAttributeComponentFactory() {
  return ComponentFactory('message', viewFactory_I18nAttributeComponentHost0);
}

final List<dynamic> styles$I18nAttributeComponentHost = const [];

class _ViewI18nAttributeComponentHost0 extends import10.HostView<import1.I18nAttributeComponent> {
  @override
  void build() {
    this.componentView = ViewI18nAttributeComponent0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.I18nAttributeComponent();
    this.initRootNode(_el_0);
  }
}

import10.HostView<import1.I18nAttributeComponent> viewFactory_I18nAttributeComponentHost0() {
  return _ViewI18nAttributeComponentHost0();
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(I18nAttributeComponent, createI18nAttributeComponentFactory());
  _ref0.initReflector();
}

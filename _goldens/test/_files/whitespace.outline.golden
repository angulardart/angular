// ignore_for_file: library_prefixes,unused_import,strict_raw_type,no_default_super_constructor_explicit,undefined_hidden_name
// The .template.dart files also export the user code.
export 'whitespace.dart';

// Required for referencing runtime code.
import 'dart:html' as _html;
import 'package:angular/angular.dart' as _ng;
import 'package:angular/src/core/change_detection/directive_change_detector.dart' as _ng;
import 'package:angular/src/core/linker/views/component_view.dart' as _ng;
import 'package:angular/src/core/linker/views/render_view.dart' as _ng;
import 'package:angular/src/core/linker/views/view.dart' as _ng;

// Required for specifically referencing user code.
import 'whitespace.dart';

// Required for "type inference" (scoping).
import 'package:angular/angular.dart';

// For @Component class PreserveWhitespace.
external List<dynamic> get styles$PreserveWhitespace;
external _ng.ComponentFactory<PreserveWhitespace> get PreserveWhitespaceNgFactory;
class ViewPreserveWhitespace0 extends _ng.ComponentView<PreserveWhitespace> {
  external ViewPreserveWhitespace0(_ng.View parentView, int parentIndex);
}
// For @Component class MinifyWhitespace.
external List<dynamic> get styles$MinifyWhitespace;
external _ng.ComponentFactory<MinifyWhitespace> get MinifyWhitespaceNgFactory;
class ViewMinifyWhitespace0 extends _ng.ComponentView<MinifyWhitespace> {
  external ViewMinifyWhitespace0(_ng.View parentView, int parentIndex);
}

external void initReflector();

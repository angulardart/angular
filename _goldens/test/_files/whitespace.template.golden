// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'whitespace.dart';
export 'whitespace.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/core/linker/views/component_view.dart' as import0;
import 'whitespace.dart' as import1;
import 'package:intl/intl.dart' as import2;
import 'package:angular/src/core/linker/style_encapsulation.dart' as import3;
import 'package:angular/src/core/linker/views/view.dart' as import4;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'dart:html' as import6;
import 'package:angular/src/runtime.dart' as import7;
import 'package:angular/src/runtime/dom_helpers.dart' as import8;
import 'package:angular/angular.dart';
import 'package:angular/src/core/linker/views/host_view.dart' as import10;

final List<dynamic> styles$PreserveWhitespace = const [];

// View for component PreserveWhitespace in asset:_goldens/test/_files/whitespace.dart (changeDetection: Default)
class ViewPreserveWhitespace0 extends import0.ComponentView<import1.PreserveWhitespace> {
  static final String _message_0 = import2.Intl.message('\n      Default i18n text\n    ', desc: 'i18n description');
  static import3.ComponentStyles _componentStyles;
  ViewPreserveWhitespace0(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('preserve-whitespace');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/_files/whitespace.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    final _text_0 = import8.appendText(parentRenderNode, '    ');
    final doc = import6.document;
    final _el_1 = import8.appendDiv(doc, parentRenderNode);
    final _text_2 = import8.appendText(_el_1, '\n      Welcome...\n      To...\n      ');
    final _el_3 = import8.appendElement(doc, _el_1, 'strong');
    final _text_4 = import8.appendText(_el_3, 'Jurassic...');
    final _text_5 = import8.appendText(_el_1, '\n      Park!\n    ');
    final _text_6 = import8.appendText(parentRenderNode, '\n    ');
    final _el_7 = import8.appendDiv(doc, parentRenderNode);
    final _text_8 = import8.appendText(_el_7, _message_0);
    final _text_9 = import8.appendText(parentRenderNode, '\n  ');
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$PreserveWhitespace, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.PreserveWhitespace> _PreserveWhitespaceNgFactory = const ComponentFactory('preserve-whitespace', viewFactory_PreserveWhitespaceHost0);
ComponentFactory<import1.PreserveWhitespace> get PreserveWhitespaceNgFactory {
  return _PreserveWhitespaceNgFactory;
}

final List<dynamic> styles$PreserveWhitespaceHost = const [];

// Host for component PreserveWhitespace in asset:_goldens/test/_files/whitespace.dart (changeDetection: Default)
class _ViewPreserveWhitespaceHost0 extends import10.HostView<import1.PreserveWhitespace> {
  @override
  void build() {
    // Child component PreserveWhitespace in asset:_goldens/test/_files/whitespace.dart (changeDetection: Default)
    this.componentView = ViewPreserveWhitespace0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.PreserveWhitespace();
    this.initRootNode(_el_0);
  }
}

import10.HostView<import1.PreserveWhitespace> viewFactory_PreserveWhitespaceHost0() {
  return _ViewPreserveWhitespaceHost0();
}

final List<dynamic> styles$MinifyWhitespace = const [];

// View for component MinifyWhitespace in asset:_goldens/test/_files/whitespace.dart (changeDetection: Default)
class ViewMinifyWhitespace0 extends import0.ComponentView<import1.MinifyWhitespace> {
  static final String _message_0 = import2.Intl.message('Default i18n text', desc: 'i18n description');
  static import3.ComponentStyles _componentStyles;
  ViewMinifyWhitespace0(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('preserve-whitespace');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/_files/whitespace.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    final doc = import6.document;
    final _el_0 = import8.appendDiv(doc, parentRenderNode);
    final _text_1 = import8.appendText(_el_0, 'Welcome... To... ');
    final _el_2 = import8.appendElement(doc, _el_0, 'strong');
    final _text_3 = import8.appendText(_el_2, 'Jurassic...');
    final _text_4 = import8.appendText(_el_0, ' Park!');
    final _el_5 = import8.appendDiv(doc, parentRenderNode);
    final _text_6 = import8.appendText(_el_5, _message_0);
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$MinifyWhitespace, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.MinifyWhitespace> _MinifyWhitespaceNgFactory = const ComponentFactory('preserve-whitespace', viewFactory_MinifyWhitespaceHost0);
ComponentFactory<import1.MinifyWhitespace> get MinifyWhitespaceNgFactory {
  return _MinifyWhitespaceNgFactory;
}

final List<dynamic> styles$MinifyWhitespaceHost = const [];

// Host for component MinifyWhitespace in asset:_goldens/test/_files/whitespace.dart (changeDetection: Default)
class _ViewMinifyWhitespaceHost0 extends import10.HostView<import1.MinifyWhitespace> {
  @override
  void build() {
    // Child component MinifyWhitespace in asset:_goldens/test/_files/whitespace.dart (changeDetection: Default)
    this.componentView = ViewMinifyWhitespace0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.MinifyWhitespace();
    this.initRootNode(_el_0);
  }
}

import10.HostView<import1.MinifyWhitespace> viewFactory_MinifyWhitespaceHost0() {
  return _ViewMinifyWhitespaceHost0();
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(PreserveWhitespace, PreserveWhitespaceNgFactory);
  _ngRef.registerComponent(MinifyWhitespace, MinifyWhitespaceNgFactory);
  _ref0.initReflector();
}

// ignore_for_file: library_prefixes,unused_import,strict_raw_type,no_default_super_constructor_explicit,undefined_hidden_name
// The .template.dart files also export the user code.
export 'dom_bindings.dart';

// Required for referencing runtime code.
import 'dart:html' as _html;
import 'package:angular/angular.dart' as _ng;
import 'package:angular/src/core/change_detection/directive_change_detector.dart' as _ng;
import 'package:angular/src/core/linker/views/component_view.dart' as _ng;
import 'package:angular/src/core/linker/views/render_view.dart' as _ng;
import 'package:angular/src/core/linker/views/view.dart' as _ng;

// Required for specifically referencing user code.
import 'dom_bindings.dart';

// Required for "type inference" (scoping).
import 'package:angular/angular.dart';

// For @Component class HasHostAttributes.
external List<dynamic> get styles$HasHostAttributes;
external _ng.ComponentFactory<HasHostAttributes> get HasHostAttributesNgFactory;
class ViewHasHostAttributes0 extends _ng.ComponentView<HasHostAttributes> {
  external ViewHasHostAttributes0(_ng.View parentView, int parentIndex);
}
// For @Component class HasTemplateAttributes.
external List<dynamic> get styles$HasTemplateAttributes;
external _ng.ComponentFactory<HasTemplateAttributes> get HasTemplateAttributesNgFactory;
class ViewHasTemplateAttributes0 extends _ng.ComponentView<HasTemplateAttributes> {
  external ViewHasTemplateAttributes0(_ng.View parentView, int parentIndex);
}
// For @Component class HasStaticAttribute.
external List<dynamic> get styles$HasStaticAttribute;
external _ng.ComponentFactory<HasStaticAttribute> get HasStaticAttributeNgFactory;
class ViewHasStaticAttribute0 extends _ng.ComponentView<HasStaticAttribute> {
  external ViewHasStaticAttribute0(_ng.View parentView, int parentIndex);
}
// For @Component class HasHostClass.
external List<dynamic> get styles$HasHostClass;
external _ng.ComponentFactory<HasHostClass> get HasHostClassNgFactory;
class ViewHasHostClass0 extends _ng.ComponentView<HasHostClass> {
  external ViewHasHostClass0(_ng.View parentView, int parentIndex);
}
// For @Component class HasTemplateClass.
external List<dynamic> get styles$HasTemplateClass;
external _ng.ComponentFactory<HasTemplateClass> get HasTemplateClassNgFactory;
class ViewHasTemplateClass0 extends _ng.ComponentView<HasTemplateClass> {
  external ViewHasTemplateClass0(_ng.View parentView, int parentIndex);
}
// For @Component class HasStyleProperty.
external List<dynamic> get styles$HasStyleProperty;
external _ng.ComponentFactory<HasStyleProperty> get HasStylePropertyNgFactory;
class ViewHasStyleProperty0 extends _ng.ComponentView<HasStyleProperty> {
  external ViewHasStyleProperty0(_ng.View parentView, int parentIndex);
}

external void initReflector();

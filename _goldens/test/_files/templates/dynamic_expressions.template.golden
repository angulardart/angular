// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'dynamic_expressions.dart';
export 'dynamic_expressions.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/core/linker/views/component_view.dart' as import0;
import 'dynamic_expressions.dart' as import1;
import 'package:angular/src/runtime/text_binding.dart' as import2;
import 'package:angular/src/core/linker/style_encapsulation.dart' as import3;
import 'package:angular/src/core/linker/views/view.dart' as import4;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'dart:html' as import6;
import 'package:angular/src/runtime.dart' as import7;
import 'package:angular/src/runtime/interpolate.dart' as import8;
import 'package:angular/angular.dart';
import 'package:angular/src/core/linker/views/host_view.dart' as import10;
import 'package:angular/src/runtime/proxies.dart' as import11;
import 'package:angular/src/core/linker/view_container.dart';
import 'package:angular/src/common/directives/ng_for.dart' as import13;
import 'package:angular/src/runtime/dom_helpers.dart' as import14;
import 'package:angular/src/core/linker/template_ref.dart';
import 'package:angular/src/core/linker/views/embedded_view.dart' as import16;
import 'package:angular/src/core/linker/views/render_view.dart' as import17;
import 'dart:core';

final List<dynamic> styles$Comp1 = const [];

// View for component Comp1 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class ViewComp10 extends import0.ComponentView<import1.Comp1> {
  final import2.TextBinding _textBinding_0 = import2.TextBinding();
  static import3.ComponentStyles _componentStyles;
  ViewComp10(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('comp-1');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/_files/templates/dynamic_expressions.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    parentRenderNode.append(this._textBinding_0.element);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    this._textBinding_0.updateText(import8.interpolate0((_ctx.a + _ctx.b)));
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$Comp1, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.Comp1> _Comp1NgFactory = const ComponentFactory('comp-1', viewFactory_Comp1Host0);
ComponentFactory<import1.Comp1> get Comp1NgFactory {
  return _Comp1NgFactory;
}

final List<dynamic> styles$Comp1Host = const [];

// Host for component Comp1 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class _ViewComp1Host0 extends import10.HostView<import1.Comp1> {
  @override
  void build() {
    // Child component Comp1 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
    this.componentView = ViewComp10(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.Comp1();
    this.initRootNode(_el_0);
  }
}

import10.HostView<import1.Comp1> viewFactory_Comp1Host0() {
  return _ViewComp1Host0();
}

final List<dynamic> styles$Comp1String = const [];

// View for component Comp1String in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class ViewComp1String0 extends import0.ComponentView<import1.Comp1String> {
  final import2.TextBinding _textBinding_0 = import2.TextBinding();
  static import3.ComponentStyles _componentStyles;
  ViewComp1String0(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('comp-1-string');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/_files/templates/dynamic_expressions.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    parentRenderNode.append(this._textBinding_0.element);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    this._textBinding_0.updateText(import8.interpolateString0((_ctx.a + _ctx.b)));
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$Comp1String, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.Comp1String> _Comp1StringNgFactory = const ComponentFactory('comp-1-string', viewFactory_Comp1StringHost0);
ComponentFactory<import1.Comp1String> get Comp1StringNgFactory {
  return _Comp1StringNgFactory;
}

final List<dynamic> styles$Comp1StringHost = const [];

// Host for component Comp1String in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class _ViewComp1StringHost0 extends import10.HostView<import1.Comp1String> {
  @override
  void build() {
    // Child component Comp1String in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
    this.componentView = ViewComp1String0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.Comp1String();
    this.initRootNode(_el_0);
  }
}

import10.HostView<import1.Comp1String> viewFactory_Comp1StringHost0() {
  return _ViewComp1StringHost0();
}

final List<dynamic> styles$Comp2 = const [];

// View for component Comp2 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class ViewComp20 extends import0.ComponentView<import1.Comp2> {
  final import2.TextBinding _textBinding_0 = import2.TextBinding();
  static import3.ComponentStyles _componentStyles;
  ViewComp20(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('comp-2');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/_files/templates/dynamic_expressions.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    parentRenderNode.append(this._textBinding_0.element);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    this._textBinding_0.updateText(import8.interpolateString0(_ctx.a.b(_ctx.c)));
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$Comp2, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.Comp2> _Comp2NgFactory = const ComponentFactory('comp-2', viewFactory_Comp2Host0);
ComponentFactory<import1.Comp2> get Comp2NgFactory {
  return _Comp2NgFactory;
}

final List<dynamic> styles$Comp2Host = const [];

// Host for component Comp2 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class _ViewComp2Host0 extends import10.HostView<import1.Comp2> {
  @override
  void build() {
    // Child component Comp2 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
    this.componentView = ViewComp20(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.Comp2();
    this.initRootNode(_el_0);
  }
}

import10.HostView<import1.Comp2> viewFactory_Comp2Host0() {
  return _ViewComp2Host0();
}

final List<dynamic> styles$Comp3 = const [];

// View for component Comp3 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class ViewComp30 extends import0.ComponentView<import1.Comp3> {
  final import2.TextBinding _textBinding_0 = import2.TextBinding();
  static import3.ComponentStyles _componentStyles;
  ViewComp30(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('comp-3');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/_files/templates/dynamic_expressions.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    parentRenderNode.append(this._textBinding_0.element);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    this._textBinding_0.updateText(import8.interpolate0(import1.Comp3.max(_ctx.a, _ctx.b).toInt().isEven));
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$Comp3, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.Comp3> _Comp3NgFactory = const ComponentFactory('comp-3', viewFactory_Comp3Host0);
ComponentFactory<import1.Comp3> get Comp3NgFactory {
  return _Comp3NgFactory;
}

final List<dynamic> styles$Comp3Host = const [];

// Host for component Comp3 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class _ViewComp3Host0 extends import10.HostView<import1.Comp3> {
  @override
  void build() {
    // Child component Comp3 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
    this.componentView = ViewComp30(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.Comp3();
    this.initRootNode(_el_0);
  }
}

import10.HostView<import1.Comp3> viewFactory_Comp3Host0() {
  return _ViewComp3Host0();
}

final List<dynamic> styles$Comp4 = const [];

// View for component Comp4 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class ViewComp40 extends import0.ComponentView<import1.Comp4> {
  final import2.TextBinding _textBinding_0 = import2.TextBinding();
  List<dynamic> Function(dynamic, dynamic) _arr_0;
  static import3.ComponentStyles _componentStyles;
  ViewComp40(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('comp-4');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/_files/templates/dynamic_expressions.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    parentRenderNode.append(this._textBinding_0.element);
    this._arr_0 = import11.pureProxy2((p0, p1) {
      return [p0, p1];
    });
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    this._textBinding_0.updateText(import8.interpolate0(this._arr_0(_ctx.a, _ctx.b).first.inMilliseconds));
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$Comp4, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.Comp4> _Comp4NgFactory = const ComponentFactory('comp-4', viewFactory_Comp4Host0);
ComponentFactory<import1.Comp4> get Comp4NgFactory {
  return _Comp4NgFactory;
}

final List<dynamic> styles$Comp4Host = const [];

// Host for component Comp4 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class _ViewComp4Host0 extends import10.HostView<import1.Comp4> {
  @override
  void build() {
    // Child component Comp4 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
    this.componentView = ViewComp40(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.Comp4();
    this.initRootNode(_el_0);
  }
}

import10.HostView<import1.Comp4> viewFactory_Comp4Host0() {
  return _ViewComp4Host0();
}

final List<dynamic> styles$Comp6 = const [];

// View for component Comp6 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class ViewComp60 extends import0.ComponentView<import1.Comp6> {
  ViewContainer _appEl_0;
  import13.NgFor _NgFor_0_9;
  var _expr_0;
  static import3.ComponentStyles _componentStyles;
  ViewComp60(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('comp-6');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/_files/templates/dynamic_expressions.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    final _anchor_0 = import14.appendAnchor(parentRenderNode);
    this._appEl_0 = ViewContainer(0, null, this, _anchor_0);
    TemplateRef _TemplateRef_0_8 = TemplateRef(this._appEl_0, viewFactory_Comp61);
    this._NgFor_0_9 = import13.NgFor(this._appEl_0, _TemplateRef_0_8);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    final currVal_0 = _ctx.durations;
    if (import7.checkBinding(this._expr_0, currVal_0, 'durations', '<FileLocation: 18 asset:_goldens/test/_files/templates/dynamic_expressions.dart:1:19>')) {
      this._NgFor_0_9.ngForOf = currVal_0;
      this._expr_0 = currVal_0;
    }
    if ((!import7.debugThrowIfChanged)) {
      this._NgFor_0_9.ngDoCheck();
    }
    this._appEl_0.detectChangesInNestedViews();
  }

  @override
  void destroyInternal() {
    this._appEl_0.destroyNestedViews();
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$Comp6, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.Comp6> _Comp6NgFactory = const ComponentFactory('comp-6', viewFactory_Comp6Host0);
ComponentFactory<import1.Comp6> get Comp6NgFactory {
  return _Comp6NgFactory;
}

class _ViewComp61 extends import16.EmbeddedView<import1.Comp6> {
  final import2.TextBinding _textBinding_0 = import2.TextBinding();
  _ViewComp61(import17.RenderView parentView, int parentIndex) : super(parentView, parentIndex);
  @override
  void build() {
    this.initRootNode(this._textBinding_0.element);
  }

  @override
  void detectChangesInternal() {
    final local_duration = import7.unsafeCast<Duration>(this.locals['\$implicit']);
    this._textBinding_0.updateText(import8.interpolate0(local_duration.inMilliseconds));
  }
}

import16.EmbeddedView<void> viewFactory_Comp61(import17.RenderView parentView, int parentIndex) {
  return _ViewComp61(parentView, parentIndex);
}

final List<dynamic> styles$Comp6Host = const [];

// Host for component Comp6 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class _ViewComp6Host0 extends import10.HostView<import1.Comp6> {
  @override
  void build() {
    // Child component Comp6 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
    this.componentView = ViewComp60(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.Comp6();
    this.initRootNode(_el_0);
  }
}

import10.HostView<import1.Comp6> viewFactory_Comp6Host0() {
  return _ViewComp6Host0();
}

final List<dynamic> styles$Comp7 = const [];

// View for component Comp7 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class ViewComp70 extends import0.ComponentView<import1.Comp7> {
  ViewContainer _appEl_0;
  import13.NgFor _NgFor_0_9;
  var _expr_0;
  static import3.ComponentStyles _componentStyles;
  ViewComp70(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('comp-7');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/_files/templates/dynamic_expressions.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    final _anchor_0 = import14.appendAnchor(parentRenderNode);
    this._appEl_0 = ViewContainer(0, null, this, _anchor_0);
    TemplateRef _TemplateRef_0_8 = TemplateRef(this._appEl_0, viewFactory_Comp71);
    this._NgFor_0_9 = import13.NgFor(this._appEl_0, _TemplateRef_0_8);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    final currVal_0 = _ctx.items;
    if (import7.checkBinding(this._expr_0, currVal_0, 'items', '<FileLocation: 18 asset:_goldens/test/_files/templates/dynamic_expressions.dart:1:19>')) {
      this._NgFor_0_9.ngForOf = currVal_0;
      this._expr_0 = currVal_0;
    }
    if ((!import7.debugThrowIfChanged)) {
      this._NgFor_0_9.ngDoCheck();
    }
    this._appEl_0.detectChangesInNestedViews();
  }

  @override
  void destroyInternal() {
    this._appEl_0.destroyNestedViews();
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$Comp7, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.Comp7> _Comp7NgFactory = const ComponentFactory('comp-7', viewFactory_Comp7Host0);
ComponentFactory<import1.Comp7> get Comp7NgFactory {
  return _Comp7NgFactory;
}

class _ViewComp71 extends import16.EmbeddedView<import1.Comp7> {
  ViewContainer _appEl_0;
  import13.NgFor _NgFor_0_9;
  var _expr_0;
  _ViewComp71(import17.RenderView parentView, int parentIndex) : super(parentView, parentIndex);
  @override
  void build() {
    final _anchor_0 = import14.createAnchor();
    this._appEl_0 = ViewContainer(0, null, this, _anchor_0);
    TemplateRef _TemplateRef_0_8 = TemplateRef(this._appEl_0, viewFactory_Comp72);
    this._NgFor_0_9 = import13.NgFor(this._appEl_0, _TemplateRef_0_8);
    this.initRootNode(this._appEl_0);
  }

  @override
  void detectChangesInternal() {
    final local_durations = import7.unsafeCast<List<Duration>>(this.locals['\$implicit']);
    final currVal_0 = local_durations;
    if (import7.checkBinding(this._expr_0, currVal_0, 'durations', '<FileLocation: 71 asset:_goldens/test/_files/templates/dynamic_expressions.dart:2:21>')) {
      this._NgFor_0_9.ngForOf = currVal_0;
      this._expr_0 = currVal_0;
    }
    if ((!import7.debugThrowIfChanged)) {
      this._NgFor_0_9.ngDoCheck();
    }
    this._appEl_0.detectChangesInNestedViews();
  }

  @override
  void destroyInternal() {
    this._appEl_0.destroyNestedViews();
  }
}

import16.EmbeddedView<void> viewFactory_Comp71(import17.RenderView parentView, int parentIndex) {
  return _ViewComp71(parentView, parentIndex);
}

class _ViewComp72 extends import16.EmbeddedView<import1.Comp7> {
  final import2.TextBinding _textBinding_0 = import2.TextBinding();
  _ViewComp72(import17.RenderView parentView, int parentIndex) : super(parentView, parentIndex);
  @override
  void build() {
    this.initRootNode(this._textBinding_0.element);
  }

  @override
  void detectChangesInternal() {
    final local_duration = import7.unsafeCast<Duration>(this.locals['\$implicit']);
    this._textBinding_0.updateText(import8.interpolate0(local_duration.inMilliseconds));
  }
}

import16.EmbeddedView<void> viewFactory_Comp72(import17.RenderView parentView, int parentIndex) {
  return _ViewComp72(parentView, parentIndex);
}

final List<dynamic> styles$Comp7Host = const [];

// Host for component Comp7 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
class _ViewComp7Host0 extends import10.HostView<import1.Comp7> {
  @override
  void build() {
    // Child component Comp7 in asset:_goldens/test/_files/templates/dynamic_expressions.dart (changeDetection: Default)
    this.componentView = ViewComp70(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.Comp7();
    this.initRootNode(_el_0);
  }
}

import10.HostView<import1.Comp7> viewFactory_Comp7Host0() {
  return _ViewComp7Host0();
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(Comp1, Comp1NgFactory);
  _ngRef.registerComponent(Comp1String, Comp1StringNgFactory);
  _ngRef.registerComponent(Comp2, Comp2NgFactory);
  _ngRef.registerComponent(Comp3, Comp3NgFactory);
  _ngRef.registerComponent(Comp4, Comp4NgFactory);
  _ngRef.registerComponent(Comp6, Comp6NgFactory);
  _ngRef.registerComponent(Comp7, Comp7NgFactory);
  _ref0.initReflector();
}

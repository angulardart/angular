// ignore_for_file: library_prefixes,unused_import,no_default_super_constructor_explicit,duplicate_import,unused_shown_name
// The .template.dart files also export the user code.
export 'opaque_token.dart';

// Required for referencing runtime code.
import 'dart:html' as _html;
import 'package:angular/angular.dart' as _ng;
import 'package:angular/src/core/change_detection/directive_change_detector.dart' as _ng;
import 'package:angular/src/core/linker/app_view.dart' as _ng;

// Required for specifically referencing user code.
import 'opaque_token.dart' as _user;

// Required for "type inference" (scoping).

// For @Component class HasOpaqueTokens.
external List<dynamic> get styles$HasOpaqueTokens;
external _ng.ComponentFactory<_user.HasOpaqueTokens> get HasOpaqueTokensNgFactory;
external _ng.AppView<_user.HasOpaqueTokens> viewFactory_HasOpaqueTokens0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewHasOpaqueTokens0 extends _ng.AppView<_user.HasOpaqueTokens> {
  external ViewHasOpaqueTokens0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class ContainsChildComponent.
external List<dynamic> get styles$ContainsChildComponent;
external _ng.ComponentFactory<_user.ContainsChildComponent> get ContainsChildComponentNgFactory;
external _ng.AppView<_user.ContainsChildComponent> viewFactory_ContainsChildComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewContainsChildComponent0 extends _ng.AppView<_user.ContainsChildComponent> {
  external ViewContainsChildComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class InjectsTypedTokenFromSomeParent.
external List<dynamic> get styles$InjectsTypedTokenFromSomeParent;
external _ng.ComponentFactory<_user.InjectsTypedTokenFromSomeParent> get InjectsTypedTokenFromSomeParentNgFactory;
external _ng.AppView<_user.InjectsTypedTokenFromSomeParent> viewFactory_InjectsTypedTokenFromSomeParent0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewInjectsTypedTokenFromSomeParent0 extends _ng.AppView<_user.InjectsTypedTokenFromSomeParent> {
  external ViewInjectsTypedTokenFromSomeParent0(_ng.AppView<dynamic> parentView, int parentIndex);
}

external void initReflector();

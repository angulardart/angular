// ignore_for_file: library_prefixes,unused_import,no_default_super_constructor_explicit,duplicate_import,unused_shown_name
// The .template.dart files also export the user code.
export 'events.dart';

// Required for referencing runtime code.
import 'dart:html' as _html;
import 'package:angular/angular.dart' as _ng;
import 'package:angular/src/core/change_detection/directive_change_detector.dart' as _ng;
import 'package:angular/src/core/linker/app_view.dart' as _ng;

// Required for specifically referencing user code.
import 'events.dart' as _user;

// Required for "type inference" (scoping).

// For @Component class UsesNativeEvents.
external List<dynamic> get styles$UsesNativeEvents;
external _ng.ComponentFactory<_user.UsesNativeEvents> get UsesNativeEventsNgFactory;
external _ng.AppView<_user.UsesNativeEvents> viewFactory_UsesNativeEvents0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewUsesNativeEvents0 extends _ng.AppView<_user.UsesNativeEvents> {
  external ViewUsesNativeEvents0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class UsesAngularEvents.
external List<dynamic> get styles$UsesAngularEvents;
external _ng.ComponentFactory<_user.UsesAngularEvents> get UsesAngularEventsNgFactory;
external _ng.AppView<_user.UsesAngularEvents> viewFactory_UsesAngularEvents0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewUsesAngularEvents0 extends _ng.AppView<_user.UsesAngularEvents> {
  external ViewUsesAngularEvents0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class HasAngularEvents.
external List<dynamic> get styles$HasAngularEvents;
external _ng.ComponentFactory<_user.HasAngularEvents> get HasAngularEventsNgFactory;
external _ng.AppView<_user.HasAngularEvents> viewFactory_HasAngularEvents0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewHasAngularEvents0 extends _ng.AppView<_user.HasAngularEvents> {
  external ViewHasAngularEvents0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class HasManyNativeHostEvents.
external List<dynamic> get styles$HasManyNativeHostEvents;
external _ng.ComponentFactory<_user.HasManyNativeHostEvents> get HasManyNativeHostEventsNgFactory;
external _ng.AppView<_user.HasManyNativeHostEvents> viewFactory_HasManyNativeHostEvents0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewHasManyNativeHostEvents0 extends _ng.AppView<_user.HasManyNativeHostEvents> {
  external ViewHasManyNativeHostEvents0(_ng.AppView<dynamic> parentView, int parentIndex);
}

external void initReflector();

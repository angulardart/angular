// ignore_for_file: library_prefixes,unused_import,no_default_super_constructor_explicit,duplicate_import,unused_shown_name
// The .template.dart files also export the user code.
export 'events.dart';

// Required for referencing runtime code.
import 'dart:html';
import 'package:angular/angular.dart';
import 'package:angular/src/core/change_detection/directive_change_detector.dart';
import 'package:angular/src/core/linker/app_view.dart';

// Required for specifically referencing user code.
import 'events.dart' as _user;

// Required for "type inference" (scoping).
import 'dart:async';
import 'package:angular/angular.dart';

// For @Component class UsesNativeEvents.
external List<dynamic> get styles$UsesNativeEvents;
external ComponentFactory<_user.UsesNativeEvents> get UsesNativeEventsNgFactory;
external AppView<_user.UsesNativeEvents> viewFactory_UsesNativeEvents0(AppView<dynamic> parentView, int parentIndex);
class ViewUsesNativeEvents0 extends AppView<_user.UsesNativeEvents> {
  external ViewUsesNativeEvents0(AppView<dynamic> parentView, int parentIndex);
}
// For @Component class UsesAngularEvents.
external List<dynamic> get styles$UsesAngularEvents;
external ComponentFactory<_user.UsesAngularEvents> get UsesAngularEventsNgFactory;
external AppView<_user.UsesAngularEvents> viewFactory_UsesAngularEvents0(AppView<dynamic> parentView, int parentIndex);
class ViewUsesAngularEvents0 extends AppView<_user.UsesAngularEvents> {
  external ViewUsesAngularEvents0(AppView<dynamic> parentView, int parentIndex);
}
// For @Component class HasAngularEvents.
external List<dynamic> get styles$HasAngularEvents;
external ComponentFactory<_user.HasAngularEvents> get HasAngularEventsNgFactory;
external AppView<_user.HasAngularEvents> viewFactory_HasAngularEvents0(AppView<dynamic> parentView, int parentIndex);
class ViewHasAngularEvents0 extends AppView<_user.HasAngularEvents> {
  external ViewHasAngularEvents0(AppView<dynamic> parentView, int parentIndex);
}
// For @Component class HasManyNativeHostEvents.
external List<dynamic> get styles$HasManyNativeHostEvents;
external ComponentFactory<_user.HasManyNativeHostEvents> get HasManyNativeHostEventsNgFactory;
external AppView<_user.HasManyNativeHostEvents> viewFactory_HasManyNativeHostEvents0(AppView<dynamic> parentView, int parentIndex);
class ViewHasManyNativeHostEvents0 extends AppView<_user.HasManyNativeHostEvents> {
  external ViewHasManyNativeHostEvents0(AppView<dynamic> parentView, int parentIndex);
}

external void initReflector();

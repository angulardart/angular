// ignore_for_file: library_prefixes,unused_import,strict_raw_type,no_default_super_constructor_explicit,undefined_hidden_name
// The .template.dart files also export the user code.
export 'change_detection_link.dart';

// Required for referencing runtime code.
import 'dart:html' as _html;
import 'package:angular/angular.dart' as _ng;
import 'package:angular/src/core/change_detection/directive_change_detector.dart' as _ng;
import 'package:angular/src/core/linker/views/component_view.dart' as _ng;
import 'package:angular/src/core/linker/views/render_view.dart' as _ng;
import 'package:angular/src/core/linker/views/view.dart' as _ng;

// Required for specifically referencing user code.
import 'change_detection_link.dart';

// Required for "type inference" (scoping).
import 'package:angular/angular.dart';
import 'package:angular/experimental.dart';

// For @Component class DefaultAncestor.
external List<dynamic> get styles$DefaultAncestor;
external _ng.ComponentFactory<DefaultAncestor> get DefaultAncestorNgFactory;
class ViewDefaultAncestor0 extends _ng.ComponentView<DefaultAncestor> {
  external ViewDefaultAncestor0(_ng.View parentView, int parentIndex);
}
// For @Component class OnPushLink.
external List<dynamic> get styles$OnPushLink;
external _ng.ComponentFactory<OnPushLink> get OnPushLinkNgFactory;
class ViewOnPushLink0 extends _ng.ComponentView<OnPushLink> {
  external ViewOnPushLink0(_ng.View parentView, int parentIndex);
}
// For @Component class NestedOnPush.
external List<dynamic> get styles$NestedOnPush;
external _ng.ComponentFactory<NestedOnPush> get NestedOnPushNgFactory;
class ViewNestedOnPush0 extends _ng.ComponentView<NestedOnPush> {
  external ViewNestedOnPush0(_ng.View parentView, int parentIndex);
}
// For @Component class NestedOnPushLink.
external List<dynamic> get styles$NestedOnPushLink;
external _ng.ComponentFactory<NestedOnPushLink> get NestedOnPushLinkNgFactory;
class ViewNestedOnPushLink0 extends _ng.ComponentView<NestedOnPushLink> {
  external ViewNestedOnPushLink0(_ng.View parentView, int parentIndex);
}

external void initReflector();

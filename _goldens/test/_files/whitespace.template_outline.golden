// ignore_for_file: library_prefixes,unused_import,no_default_super_constructor_explicit,duplicate_import,unused_shown_name
// The .template.dart files also export the user code.
export 'whitespace.dart';

// Required for referencing runtime code.
import 'dart:html';
import 'package:angular/angular.dart';
import 'package:angular/src/core/change_detection/directive_change_detector.dart';
import 'package:angular/src/core/linker/app_view.dart';

// Required for specifically referencing user code.
import 'whitespace.dart' as _user;

// Required for "type inference" (scoping).
import 'package:angular/angular.dart';

// For @Component class PreserveWhitespace.
const List<dynamic> styles$PreserveWhitespace = const [];
external ComponentFactory get PreserveWhitespaceNgFactory;
external AppView<_user.PreserveWhitespace> viewFactory_PreserveWhitespace0(AppView<dynamic> parentView, num parentIndex);
class ViewPreserveWhitespace0 extends AppView<_user.PreserveWhitespace> {
  external ViewPreserveWhitespace0(AppView<dynamic> parentView, num parentIndex);
}
// For @Component class MinifyWhitespace.
const List<dynamic> styles$MinifyWhitespace = const [];
external ComponentFactory get MinifyWhitespaceNgFactory;
external AppView<_user.MinifyWhitespace> viewFactory_MinifyWhitespace0(AppView<dynamic> parentView, num parentIndex);
class ViewMinifyWhitespace0 extends AppView<_user.MinifyWhitespace> {
  external ViewMinifyWhitespace0(AppView<dynamic> parentView, num parentIndex);
}

external void initReflector();

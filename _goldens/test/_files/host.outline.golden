// ignore_for_file: library_prefixes,unused_import,no_default_super_constructor_explicit
// The .template.dart files also export the user code.
export 'host.dart';

// Required for referencing runtime code.
import 'dart:html' as _html;
import 'package:angular/angular.dart' as _ng;
import 'package:angular/src/core/change_detection/directive_change_detector.dart' as _ng;
import 'package:angular/src/core/linker/app_view.dart' as _ng;
import 'package:angular/src/core/linker/views/render_view.dart' as _ng;

// Required for specifically referencing user code.
import 'host.dart';

// Required for "type inference" (scoping).
import 'dart:async';
import 'package:angular/angular.dart';

// For @Component class HostComponentNewSyntax.
external List<dynamic> get styles$HostComponentNewSyntax;
external _ng.ComponentFactory<HostComponentNewSyntax> get HostComponentNewSyntaxNgFactory;
class ViewHostComponentNewSyntax0 extends _ng.AppView<HostComponentNewSyntax> {
  external ViewHostComponentNewSyntax0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class UsesHostComponentWithDirective.
external List<dynamic> get styles$UsesHostComponentWithDirective;
external _ng.ComponentFactory<UsesHostComponentWithDirective> get UsesHostComponentWithDirectiveNgFactory;
class ViewUsesHostComponentWithDirective0 extends _ng.AppView<UsesHostComponentWithDirective> {
  external ViewUsesHostComponentWithDirective0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class HostComponent.
external List<dynamic> get styles$HostComponent;
external _ng.ComponentFactory<HostComponent> get HostComponentNgFactory;
class ViewHostComponent0 extends _ng.AppView<HostComponent> {
  external ViewHostComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Directive class ListensToFooEvent.
class ListensToFooEventNgCd extends _ng.DirectiveChangeDetector {
  external ListensToFooEvent get instance;
  external void deliverChanges();
  external ListensToFooEventNgCd(ListensToFooEvent instance);
  external void detectHostChanges(_ng.RenderView view, _html.Element node);
}

external void initReflector();

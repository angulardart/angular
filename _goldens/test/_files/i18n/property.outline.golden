// ignore_for_file: library_prefixes,unused_import,no_default_super_constructor_explicit,duplicate_import,unused_shown_name
// The .template.dart files also export the user code.
export 'property.dart';

// Required for referencing runtime code.
import 'dart:html';
import 'package:angular/angular.dart';
import 'package:angular/src/core/change_detection/directive_change_detector.dart';
import 'package:angular/src/core/linker/app_view.dart';

// Required for specifically referencing user code.
import 'property.dart' as _user;

// Required for "type inference" (scoping).

// For @Component class I18nPropertyComponent.
external List<dynamic> get styles$I18nPropertyComponent;
external ComponentFactory<_user.I18nPropertyComponent> get I18nPropertyComponentNgFactory;
external AppView<_user.I18nPropertyComponent> viewFactory_I18nPropertyComponent0(AppView<dynamic> parentView, int parentIndex);
class ViewI18nPropertyComponent0 extends AppView<_user.I18nPropertyComponent> {
  external ViewI18nPropertyComponent0(AppView<dynamic> parentView, int parentIndex);
}
// For @Directive class MessageDirective.
class MessageDirectiveNgCd extends DirectiveChangeDetector {
  external _user.MessageDirective get instance;
  external void deliverChanges();
  external MessageDirectiveNgCd(_user.MessageDirective instance);
  external void detectHostChanges(AppView view, Element node);
}

external void initReflector();

// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'property.dart';
export 'property.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/core/linker/views/component_view.dart' as import0;
import 'property.dart' as import1;
import 'package:intl/intl.dart' as import2;
import 'package:angular/src/core/linker/style_encapsulation.dart' as import3;
import 'package:angular/src/core/linker/views/view.dart' as import4;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'dart:html' as import6;
import 'package:angular/src/runtime.dart' as import7;
import 'package:angular/src/runtime/dom_helpers.dart' as import8;
import 'package:angular/angular.dart';
import 'package:angular/src/core/linker/views/host_view.dart' as import10;

final List<dynamic> styles$I18nPropertyComponent = const [];

// View for component I18nPropertyComponent in asset:_goldens/test/_files/i18n/property.dart (changeDetection: Default)
class ViewI18nPropertyComponent0 extends import0.ComponentView<import1.I18nPropertyComponent> {
  static final String _message_0 = import2.Intl.message('message', desc: 'description');
  import1.MessageDirective _MessageDirective_0_5;
  static import3.ComponentStyles _componentStyles;
  ViewI18nPropertyComponent0(import4.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import6.document.createElement('message');
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/_files/i18n/property.dart' : null);
  }

  @override
  void build() {
    final import6.HtmlElement parentRenderNode = this.initViewRoot();
    final doc = import6.document;
    final _el_0 = import8.appendDiv(doc, parentRenderNode);
    this._MessageDirective_0_5 = import1.MessageDirective();
    final _text_1 = import8.appendText(parentRenderNode, ',');
  }

  @override
  void detectChangesInternal() {
    bool firstCheck = this.firstCheck;
    if (firstCheck) {
      (this._MessageDirective_0_5.message = _message_0);
    }
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import3.ComponentStyles.unscoped(styles$I18nPropertyComponent, _debugComponentUrl));
      if (import7.isDevMode) {
        import3.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.I18nPropertyComponent> _I18nPropertyComponentNgFactory = const ComponentFactory('message', viewFactory_I18nPropertyComponentHost0);
ComponentFactory<import1.I18nPropertyComponent> get I18nPropertyComponentNgFactory {
  return _I18nPropertyComponentNgFactory;
}

final List<dynamic> styles$I18nPropertyComponentHost = const [];

// Host for component I18nPropertyComponent in asset:_goldens/test/_files/i18n/property.dart (changeDetection: Default)
class _ViewI18nPropertyComponentHost0 extends import10.HostView<import1.I18nPropertyComponent> {
  @override
  void build() {
    // Child component I18nPropertyComponent in asset:_goldens/test/_files/i18n/property.dart (changeDetection: Default)
    this.componentView = ViewI18nPropertyComponent0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.I18nPropertyComponent();
    this.initRootNode(_el_0);
  }
}

import10.HostView<import1.I18nPropertyComponent> viewFactory_I18nPropertyComponentHost0() {
  return _ViewI18nPropertyComponentHost0();
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(I18nPropertyComponent, I18nPropertyComponentNgFactory);
  _ref0.initReflector();
}

// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'text.dart';
export 'text.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/core/linker/app_view.dart';
import 'text.dart' as import1;
import 'package:intl/intl.dart' as import2;
import 'package:angular/src/core/linker/style_encapsulation.dart' as import3;
import 'package:angular/src/core/linker/views/render_view.dart' as import4;
import 'package:angular/src/core/linker/view_type.dart' as import5;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'dart:html' as import7;
import 'package:angular/src/runtime.dart' as import8;
import 'package:angular/angular.dart';
import 'package:angular/src/runtime/dom_helpers.dart' as import10;

final List<dynamic> styles$I18nTextComponent = const [];

class ViewI18nTextComponent0 extends AppView<import1.I18nTextComponent> {
  static final String _message_0 = import2.Intl.message('message', desc: 'description', meaning: 'meaning', skip: true);
  static import3.ComponentStyles _componentStyles;
  ViewI18nTextComponent0(import4.RenderView parentView, int parentIndex) : super(import5.ViewType.component, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    initComponentStyles();
    rootEl = import7.document.createElement('message');
  }
  static String get _debugComponentUrl {
    return (import8.isDevMode ? 'asset:_goldens/test/_files/i18n/text.dart' : null);
  }

  @override
  ComponentRef<import1.I18nTextComponent> build() {
    final import7.HtmlElement parentRenderNode = initViewRoot();
    final doc = import7.document;
    final _el_0 = import10.appendElement(doc, parentRenderNode, 'p');
    final _text_1 = import10.appendText(_el_0, _message_0);
    init0();
  }

  @override
  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      (_componentStyles = (styles = (_componentStyles = import3.ComponentStyles.unscoped(styles$I18nTextComponent, _debugComponentUrl))));
    }
    componentStyles = styles;
  }
}

const ComponentFactory<import1.I18nTextComponent> _I18nTextComponentNgFactory = const ComponentFactory('message', viewFactory_I18nTextComponentHost0);
ComponentFactory<import1.I18nTextComponent> get I18nTextComponentNgFactory {
  return _I18nTextComponentNgFactory;
}

final List<dynamic> styles$I18nTextComponentHost = const [];

class _ViewI18nTextComponentHost0 extends AppView<import1.I18nTextComponent> {
  ViewI18nTextComponent0 _compView_0;
  import1.I18nTextComponent _I18nTextComponent_0_5;
  _ViewI18nTextComponentHost0(import4.RenderView parentView, int parentIndex) : super(import5.ViewType.host, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways);
  @override
  AppView<void> get hostedComponentView {
    return _compView_0;
  }

  @override
  ComponentRef<import1.I18nTextComponent> build() {
    _compView_0 = ViewI18nTextComponent0(this, 0);
    final _el_0 = _compView_0.rootEl;
    _I18nTextComponent_0_5 = import1.I18nTextComponent();
    _compView_0.create(_I18nTextComponent_0_5, projectedNodes);
    init1(_el_0);
    return ComponentRef(0, this, _el_0, _I18nTextComponent_0_5);
  }

  @override
  void detectChangesInternal() {
    _compView_0.detectChanges();
  }

  @override
  void destroyInternal() {
    _compView_0.destroyInternalState();
  }
}

AppView<import1.I18nTextComponent> viewFactory_I18nTextComponentHost0() {
  return _ViewI18nTextComponentHost0(null, null);
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(I18nTextComponent, I18nTextComponentNgFactory);
  _ref0.initReflector();
}

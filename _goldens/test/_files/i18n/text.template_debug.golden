// **************************************************************************
// Generator: Instance of 'Compiler'
// **************************************************************************

// ignore_for_file: cancel_subscriptions,constant_identifier_names,duplicate_import,non_constant_identifier_names,library_prefixes,UNUSED_IMPORT,UNUSED_SHOWN_NAME
import 'text.dart';
export 'text.dart';
import 'package:angular/angular.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/debug/debug_context.dart';
import 'package:angular/src/debug/debug_app_view.dart';
import 'text.dart' as import2;
import 'dart:html' as import3;
import 'package:intl/intl.dart' as import4;
import 'package:angular/src/core/render/api.dart';
import 'package:angular/src/core/linker/app_view.dart';
import 'package:angular/src/core/linker/view_type.dart' as import7;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'package:angular/src/core/linker/app_view_utils.dart' as import9;
import 'package:angular/angular.dart';

const List<dynamic> styles$I18nTextComponent = const [];
List<StaticNodeDebugInfo> nodeDebugInfos_I18nTextComponent0 = [null, null];

class ViewI18nTextComponent0 extends DebugAppView<import2.I18nTextComponent> {
  import3.Element _el_0;
  static final String _message_0 = import4.Intl.message('message', desc: 'description');
  static RenderComponentType _renderType;
  ViewI18nTextComponent0(AppView<dynamic> parentView, int parentIndex) : super(import7.ViewType.component, {}, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways, nodeDebugInfos_I18nTextComponent0) {
    rootEl = import3.document.createElement('message');
    _renderType ??= import9.appViewUtils.createRenderType('asset:_goldens/test/_files/i18n/text.dart class I18nTextComponent - inline template', ViewEncapsulation.None, styles$I18nTextComponent);
    setupComponentType(_renderType);
  }
  @override
  ComponentRef<import2.I18nTextComponent> build() {
    final _rootEl = rootEl;
    final import3.HtmlElement parentRenderNode = initViewRoot(_rootEl);
    var doc = import3.document;
    _el_0 = createAndAppendDbg(this, doc, 'p', parentRenderNode, 0, 0, 0);
    import3.Text _text_1 = new import3.Text(_message_0);
    _el_0.append(_text_1);
    dbgElm(this, _text_1, 1, 0, 23);
    init(const [], null, [_el_0, _text_1]);
    return null;
  }
}

AppView<import2.I18nTextComponent> viewFactory_I18nTextComponent0(AppView<dynamic> parentView, int parentIndex) {
  return new ViewI18nTextComponent0(parentView, parentIndex);
}

const List<dynamic> styles$I18nTextComponentHost = const [];
List<StaticNodeDebugInfo> nodeDebugInfos_I18nTextComponentHost0 = [
  new StaticNodeDebugInfo([import2.I18nTextComponent], import2.I18nTextComponent, <String, dynamic>{})
];

class _ViewI18nTextComponentHost0 extends DebugAppView<dynamic> {
  ViewI18nTextComponent0 _compView_0;
  import2.I18nTextComponent _I18nTextComponent_0_5;
  _ViewI18nTextComponentHost0(AppView<dynamic> parentView, int parentIndex) : super(import7.ViewType.host, {}, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways, nodeDebugInfos_I18nTextComponentHost0);
  @override
  ComponentRef build() {
    _compView_0 = new ViewI18nTextComponent0(this, 0);
    rootEl = _compView_0.rootEl;
    dbgIdx(rootEl, 0);
    _I18nTextComponent_0_5 = new import2.I18nTextComponent();
    _compView_0.create(_I18nTextComponent_0_5, projectableNodes);
    init0Dbg(rootEl, [rootEl]);
    return new ComponentRef<import2.I18nTextComponent>(0, this, rootEl, _I18nTextComponent_0_5);
  }

  @override
  void detectChangesInternal() {
    _compView_0.detectChanges();
  }

  @override
  void destroyInternal() {
    _compView_0?.destroy();
  }
}

AppView viewFactory_I18nTextComponentHost0(AppView<dynamic> parentView, int parentIndex) {
  return new _ViewI18nTextComponentHost0(parentView, parentIndex);
}

const ComponentFactory<import2.I18nTextComponent> I18nTextComponentNgFactory = const ComponentFactory<import2.I18nTextComponent>('message', viewFactory_I18nTextComponentHost0, _I18nTextComponentMetadata);
const _I18nTextComponentMetadata = const [];
var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(I18nTextComponent, I18nTextComponentNgFactory);
  _ref0.initReflector();
}

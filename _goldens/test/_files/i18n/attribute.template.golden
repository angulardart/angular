// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'attribute.dart';
export 'attribute.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/core/linker/app_view.dart';
import 'attribute.dart' as import1;
import 'package:intl/intl.dart' as import2;
import 'package:angular/src/core/linker/style_encapsulation.dart' as import3;
import 'package:angular/src/core/linker/view_type.dart' as import4;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'dart:html' as import6;
import 'package:angular/src/runtime.dart' as import7;
import 'package:angular/angular.dart';
import 'package:angular/src/runtime/dom_helpers.dart' as import9;

final List<dynamic> styles$I18nAttributeComponent = const [];

class ViewI18nAttributeComponent0 extends AppView<import1.I18nAttributeComponent> {
  static final String _message_0 = import2.Intl.message('message', desc: 'description');
  static import3.ComponentStyles _componentStyles;
  ViewI18nAttributeComponent0(AppView<dynamic> parentView, int parentIndex) : super(import4.ViewType.component, {}, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    rootEl = import6.document.createElement('message');
    initComponentStyles();
  }
  static String get _debugComponentUrl {
    return (import7.isDevMode ? 'asset:_goldens/test/_files/i18n/attribute.dart' : null);
  }

  @override
  ComponentRef<import1.I18nAttributeComponent> build() {
    final _rootEl = rootEl;
    final import6.HtmlElement parentRenderNode = initViewRoot(_rootEl);
    final doc = import6.document;
    final _el_0 = import9.appendElement(doc, parentRenderNode, 'img');
    import9.setAttribute(_el_0, 'alt', _message_0);
    init(const [], null);
  }

  @override
  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      (_componentStyles = (styles = (_componentStyles = import3.ComponentStyles.unscoped(styles$I18nAttributeComponent, _debugComponentUrl))));
    }
    componentStyles = styles;
  }
}

AppView<import1.I18nAttributeComponent> viewFactory_I18nAttributeComponent0(AppView<dynamic> parentView, int parentIndex) {
  return ViewI18nAttributeComponent0(parentView, parentIndex);
}

const ComponentFactory<import1.I18nAttributeComponent> _I18nAttributeComponentNgFactory = const ComponentFactory('message', viewFactory_I18nAttributeComponentHost0);
ComponentFactory<import1.I18nAttributeComponent> get I18nAttributeComponentNgFactory {
  return _I18nAttributeComponentNgFactory;
}

final List<dynamic> styles$I18nAttributeComponentHost = const [];

class _ViewI18nAttributeComponentHost0 extends AppView<import1.I18nAttributeComponent> {
  ViewI18nAttributeComponent0 _compView_0;
  import1.I18nAttributeComponent _I18nAttributeComponent_0_5;
  _ViewI18nAttributeComponentHost0(AppView<dynamic> parentView, int parentIndex) : super(import4.ViewType.host, {}, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    initComponentStyles();
  }
  @override
  ComponentRef<import1.I18nAttributeComponent> build() {
    _compView_0 = ViewI18nAttributeComponent0(this, 0);
    rootEl = _compView_0.rootEl;
    _I18nAttributeComponent_0_5 = import1.I18nAttributeComponent();
    _compView_0.create(_I18nAttributeComponent_0_5, projectableNodes);
    init0(rootEl);
    return ComponentRef(0, this, rootEl, _I18nAttributeComponent_0_5);
  }

  @override
  void detectChangesInternal() {
    _compView_0.detectChanges();
  }

  @override
  void destroyInternal() {
    _compView_0.destroy();
  }
}

AppView<import1.I18nAttributeComponent> viewFactory_I18nAttributeComponentHost0(AppView<dynamic> parentView, int parentIndex) {
  return _ViewI18nAttributeComponentHost0(parentView, parentIndex);
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(I18nAttributeComponent, I18nAttributeComponentNgFactory);
  _ref0.initReflector();
}

// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'empty_properties.dart';
export 'empty_properties.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/core/linker/views/component_view.dart' as import0;
import 'empty_properties.dart' as import1;
import 'package:angular/src/core/linker/style_encapsulation.dart' as import2;
import 'package:angular/src/core/linker/views/view.dart' as import3;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'dart:html' as import5;
import 'package:angular/src/runtime.dart' as import6;
import 'package:angular/src/runtime/dom_helpers.dart' as import7;
import 'package:angular/angular.dart';
import 'package:angular/src/core/linker/views/host_view.dart' as import9;

final List<dynamic> styles$EmptyPropertiesComponent = const [];

// View for component EmptyPropertiesComponent in asset:_goldens/test/_files/empty_properties.dart (changeDetection: Default)
class ViewEmptyPropertiesComponent0 extends import0.ComponentView<import1.EmptyPropertiesComponent> {
  ViewFancyButtonComponent0 _compView_0;
  import1.FancyButtonComponent _FancyButtonComponent_0_5;
  ViewFancyButtonComponent0 _compView_1;
  import1.FancyButtonComponent _FancyButtonComponent_1_5;
  ViewFancyButtonComponent0 _compView_2;
  import1.FancyButtonComponent _FancyButtonComponent_2_5;
  ViewFancyButtonComponent0 _compView_3;
  import1.FancyButtonComponent _FancyButtonComponent_3_5;
  static import2.ComponentStyles _componentStyles;
  ViewEmptyPropertiesComponent0(import3.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import5.document.createElement('empty-properties');
  }
  static String get _debugComponentUrl {
    return (import6.isDevMode ? 'asset:_goldens/test/_files/empty_properties.dart' : null);
  }

  @override
  void build() {
    final import5.HtmlElement parentRenderNode = this.initViewRoot();
    // Child component FancyButtonComponent in asset:_goldens/test/_files/empty_properties.dart (changeDetection: Default)
    this._compView_0 = ViewFancyButtonComponent0(this, 0);
    final _el_0 = this._compView_0.rootElement;
    parentRenderNode.append(_el_0);
    import7.setAttribute(_el_0, 'raised', '');
    this._FancyButtonComponent_0_5 = import1.FancyButtonComponent();
    this._compView_0.create(this._FancyButtonComponent_0_5);
    // Child component FancyButtonComponent in asset:_goldens/test/_files/empty_properties.dart (changeDetection: Default)
    this._compView_1 = ViewFancyButtonComponent0(this, 1);
    final _el_1 = this._compView_1.rootElement;
    parentRenderNode.append(_el_1);
    this._FancyButtonComponent_1_5 = import1.FancyButtonComponent();
    this._compView_1.create(this._FancyButtonComponent_1_5);
    // Child component FancyButtonComponent in asset:_goldens/test/_files/empty_properties.dart (changeDetection: Default)
    this._compView_2 = ViewFancyButtonComponent0(this, 2);
    final _el_2 = this._compView_2.rootElement;
    parentRenderNode.append(_el_2);
    this._FancyButtonComponent_2_5 = import1.FancyButtonComponent();
    this._compView_2.create(this._FancyButtonComponent_2_5);
    // Child component FancyButtonComponent in asset:_goldens/test/_files/empty_properties.dart (changeDetection: Default)
    this._compView_3 = ViewFancyButtonComponent0(this, 3);
    final _el_3 = this._compView_3.rootElement;
    parentRenderNode.append(_el_3);
    this._FancyButtonComponent_3_5 = import1.FancyButtonComponent();
    this._compView_3.create(this._FancyButtonComponent_3_5);
  }

  @override
  void detectChangesInternal() {
    bool firstCheck = this.firstCheck;
    if (firstCheck) {
      this._FancyButtonComponent_0_5.raised = true;
      this._FancyButtonComponent_1_5.raised = true;
      this._FancyButtonComponent_2_5.raised = true;
      this._FancyButtonComponent_3_5.raised = false;
    }
    this._compView_0.detectChanges();
    this._compView_1.detectChanges();
    this._compView_2.detectChanges();
    this._compView_3.detectChanges();
  }

  @override
  void destroyInternal() {
    this._compView_0.destroyInternalState();
    this._compView_1.destroyInternalState();
    this._compView_2.destroyInternalState();
    this._compView_3.destroyInternalState();
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import2.ComponentStyles.unscoped(styles$EmptyPropertiesComponent, _debugComponentUrl));
      if (import6.isDevMode) {
        import2.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.EmptyPropertiesComponent> _EmptyPropertiesComponentNgFactory = const ComponentFactory('empty-properties', viewFactory_EmptyPropertiesComponentHost0);
ComponentFactory<import1.EmptyPropertiesComponent> get EmptyPropertiesComponentNgFactory {
  return _EmptyPropertiesComponentNgFactory;
}

final List<dynamic> styles$EmptyPropertiesComponentHost = const [];

// Host for component EmptyPropertiesComponent in asset:_goldens/test/_files/empty_properties.dart (changeDetection: Default)
class _ViewEmptyPropertiesComponentHost0 extends import9.HostView<import1.EmptyPropertiesComponent> {
  @override
  void build() {
    // Child component EmptyPropertiesComponent in asset:_goldens/test/_files/empty_properties.dart (changeDetection: Default)
    this.componentView = ViewEmptyPropertiesComponent0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.EmptyPropertiesComponent();
    this.initRootNode(_el_0);
  }
}

import9.HostView<import1.EmptyPropertiesComponent> viewFactory_EmptyPropertiesComponentHost0() {
  return _ViewEmptyPropertiesComponentHost0();
}

final List<dynamic> styles$FancyButtonComponent = const [];

// View for component FancyButtonComponent in asset:_goldens/test/_files/empty_properties.dart (changeDetection: Default)
class ViewFancyButtonComponent0 extends import0.ComponentView<import1.FancyButtonComponent> {
  static import2.ComponentStyles _componentStyles;
  ViewFancyButtonComponent0(import3.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import5.document.createElement('fancy-button');
  }
  static String get _debugComponentUrl {
    return (import6.isDevMode ? 'asset:_goldens/test/_files/empty_properties.dart' : null);
  }

  @override
  void build() {
    final import5.HtmlElement parentRenderNode = this.initViewRoot();
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import2.ComponentStyles.unscoped(styles$FancyButtonComponent, _debugComponentUrl));
      if (import6.isDevMode) {
        import2.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.FancyButtonComponent> _FancyButtonComponentNgFactory = const ComponentFactory('fancy-button', viewFactory_FancyButtonComponentHost0);
ComponentFactory<import1.FancyButtonComponent> get FancyButtonComponentNgFactory {
  return _FancyButtonComponentNgFactory;
}

final List<dynamic> styles$FancyButtonComponentHost = const [];

// Host for component FancyButtonComponent in asset:_goldens/test/_files/empty_properties.dart (changeDetection: Default)
class _ViewFancyButtonComponentHost0 extends import9.HostView<import1.FancyButtonComponent> {
  @override
  void build() {
    // Child component FancyButtonComponent in asset:_goldens/test/_files/empty_properties.dart (changeDetection: Default)
    this.componentView = ViewFancyButtonComponent0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.FancyButtonComponent();
    this.initRootNode(_el_0);
  }
}

import9.HostView<import1.FancyButtonComponent> viewFactory_FancyButtonComponentHost0() {
  return _ViewFancyButtonComponentHost0();
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(EmptyPropertiesComponent, EmptyPropertiesComponentNgFactory);
  _ngRef.registerComponent(FancyButtonComponent, FancyButtonComponentNgFactory);
  _ref0.initReflector();
}

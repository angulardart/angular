// **************************************************************************
// Generator: Instance of 'Compiler'
// **************************************************************************

// ignore_for_file: cancel_subscriptions,constant_identifier_names,duplicate_import,non_constant_identifier_names,library_prefixes,UNUSED_IMPORT,UNUSED_SHOWN_NAME
import 'provider_modules.dart';
export 'provider_modules.dart';
import 'package:angular/angular.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/debug/debug_context.dart';
import 'package:angular/src/debug/debug_app_view.dart';
import 'provider_modules.dart' as import2;
import 'package:angular/src/core/render/api.dart';
import 'package:angular/src/core/linker/app_view.dart';
import 'package:angular/src/core/linker/view_type.dart' as import5;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'dart:html' as import7;
import 'package:angular/src/core/linker/app_view_utils.dart' as import8;
import 'package:angular/angular.dart';
import 'package:angular/src/core/di/opaque_token.dart' as import10;
import 'dart:core';

const List<dynamic> styles$ProviderModulesComponent = const [];
List<StaticNodeDebugInfo> nodeDebugInfos_ProviderModulesComponent0 = [];

class ViewProviderModulesComponent0 extends DebugAppView<import2.ProviderModulesComponent> {
  static RenderComponentType _renderType;
  ViewProviderModulesComponent0(AppView<dynamic> parentView, int parentIndex) : super(import5.ViewType.COMPONENT, {}, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways, nodeDebugInfos_ProviderModulesComponent0) {
    rootEl = import7.document.createElement('provider-modules');
    _renderType ??= import8.appViewUtils.createRenderType('asset:_goldens/test/_files/provider_modules.dart class ProviderModulesComponent - inline template', ViewEncapsulation.None, styles$ProviderModulesComponent);
    setupComponentType(_renderType);
  }
  @override
  ComponentRef<import2.ProviderModulesComponent> build() {
    final _rootEl = rootEl;
    final import7.HtmlElement parentRenderNode = initViewRoot(_rootEl);
    init(const [], null, []);
    return null;
  }
}

AppView<import2.ProviderModulesComponent> viewFactory_ProviderModulesComponent0(AppView<dynamic> parentView, int parentIndex) {
  return new ViewProviderModulesComponent0(parentView, parentIndex);
}

const List<dynamic> styles$ProviderModulesComponentHost = const [];
List<StaticNodeDebugInfo> nodeDebugInfos_ProviderModulesComponentHost0 = [
  new StaticNodeDebugInfo([import2.ProviderModulesComponent, import2.FooService, const import10.OpaqueToken('fooToken'), const import10.OpaqueToken('barToken'), const import10.OpaqueToken('bazToken')], import2.ProviderModulesComponent, <String, dynamic>{})
];

class _ViewProviderModulesComponentHost0 extends DebugAppView<dynamic> {
  ViewProviderModulesComponent0 _compView_0;
  import2.ProviderModulesComponent _ProviderModulesComponent_0_5;
  import2.FooService __FooService_0_6;
  Duration __fooToken_0_7;
  List<dynamic> __barToken_0_8;
  dynamic __bazToken_0_9;
  _ViewProviderModulesComponentHost0(AppView<dynamic> parentView, int parentIndex) : super(import5.ViewType.HOST, {}, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways, nodeDebugInfos_ProviderModulesComponentHost0);
  import2.FooService get _FooService_0_6 {
    dbg(0, 0, 0);
    if ((this.__FooService_0_6 == null)) {
      (__FooService_0_6 = new import2.FooService());
    }
    return this.__FooService_0_6;
  }

  Duration get _fooToken_0_7 {
    dbg(0, 0, 0);
    if ((this.__fooToken_0_7 == null)) {
      (__fooToken_0_7 = const Duration(seconds: 500));
    }
    return this.__fooToken_0_7;
  }

  List<dynamic> get _barToken_0_8 {
    dbg(0, 0, 0);
    if ((this.__barToken_0_8 == null)) {
      (__barToken_0_8 = const ['a', 'b', 'c']);
    }
    return this.__barToken_0_8;
  }

  dynamic get _bazToken_0_9 {
    dbg(0, 0, 0);
    if ((this.__bazToken_0_9 == null)) {
      (__bazToken_0_9 = import2.getSomeValues());
    }
    return this.__bazToken_0_9;
  }

  @override
  ComponentRef build() {
    _compView_0 = new ViewProviderModulesComponent0(this, 0);
    rootEl = _compView_0.rootEl;
    dbgIdx(rootEl, 0);
    _ProviderModulesComponent_0_5 = new import2.ProviderModulesComponent();
    _compView_0.create(_ProviderModulesComponent_0_5, projectableNodes);
    init0Dbg(rootEl, [rootEl]);
    return new ComponentRef<import2.ProviderModulesComponent>(0, this, rootEl, _ProviderModulesComponent_0_5);
  }

  @override
  dynamic injectorGetInternal(dynamic token, int nodeIndex, dynamic notFoundResult) {
    if ((identical(token, import2.FooService) && (0 == nodeIndex))) {
      return _FooService_0_6;
    }
    if ((identical(token, const import10.OpaqueToken('fooToken')) && (0 == nodeIndex))) {
      return _fooToken_0_7;
    }
    if ((identical(token, const import10.OpaqueToken('barToken')) && (0 == nodeIndex))) {
      return _barToken_0_8;
    }
    if ((identical(token, const import10.OpaqueToken('bazToken')) && (0 == nodeIndex))) {
      return _bazToken_0_9;
    }
    return notFoundResult;
  }

  @override
  void detectChangesInternal() {
    _compView_0.detectChanges();
  }

  @override
  void destroyInternal() {
    _compView_0?.destroy();
  }
}

AppView viewFactory_ProviderModulesComponentHost0(AppView<dynamic> parentView, int parentIndex) {
  return new _ViewProviderModulesComponentHost0(parentView, parentIndex);
}

const ComponentFactory<import2.ProviderModulesComponent> ProviderModulesComponentNgFactory = const ComponentFactory<import2.ProviderModulesComponent>('provider-modules', viewFactory_ProviderModulesComponentHost0, _ProviderModulesComponentMetadata);
const _ProviderModulesComponentMetadata = const [];
var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerFactory(FooService, () => new FooService());
  _ngRef.registerComponent(ProviderModulesComponent, ProviderModulesComponentNgFactory);
  _ref0.initReflector();
}

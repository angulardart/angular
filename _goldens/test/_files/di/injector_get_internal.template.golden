// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'injector_get_internal.dart';
export 'injector_get_internal.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/core/linker/app_view.dart';
import 'injector_get_internal.dart' as import1;
import 'dart:core';
import 'package:angular/src/core/linker/style_encapsulation.dart' as import3;
import 'package:angular/src/core/linker/views/render_view.dart' as import4;
import 'package:angular/src/core/linker/view_type.dart' as import5;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'dart:html' as import7;
import 'package:angular/src/runtime.dart' as import8;
import 'package:angular/angular.dart';
import 'package:angular/src/runtime/dom_helpers.dart' as import10;
import 'package:angular/src/core/di/opaque_token.dart' as import11;
import 'injector_get_internal.dart' as import12;

final List<dynamic> styles$AppComponent = const [];

class ViewAppComponent0 extends AppView<import1.AppComponent> {
  import1.NgForm _NgForm_0_5;
  ViewMaterialInputComponent0 _compView_1;
  import1.MaterialInputComponent _MaterialInputComponent_1_5;
  import1.MaterialInputValueAccessor _MaterialInputValueAccessor_1_6;
  import1.NgControlName _NgControlName_1_7;
  import1.RequiredValidator _RequiredValidator_1_8;
  import1.ServiceB __Service_1_9;
  import1.DeferredValidator __DeferredValidator_1_10;
  List<import1.Validator> __MultiToken_1_11;
  int __luckyNumber_1_15;
  import1.NgControlGroup _NgControlGroup_3_5;
  ViewMaterialInputComponent0 _compView_4;
  import1.MaterialInputComponent _MaterialInputComponent_4_5;
  import1.MaterialInputValueAccessor _MaterialInputValueAccessor_4_6;
  import1.NgControlName _NgControlName_4_7;
  import1.RequiredValidator _RequiredValidator_4_8;
  import1.ServiceB __Service_4_9;
  import1.DeferredValidator __DeferredValidator_4_10;
  List<import1.Validator> __MultiToken_4_11;
  int __luckyNumber_4_15;
  ViewMaterialInputComponent0 _compView_5;
  import1.MaterialInputComponent _MaterialInputComponent_5_5;
  import1.MaterialInputValueAccessor _MaterialInputValueAccessor_5_6;
  import1.NgControlName _NgControlName_5_7;
  import1.ServiceB __Service_5_8;
  import1.DeferredValidator __DeferredValidator_5_9;
  List<import1.Validator> __MultiToken_5_10;
  int __luckyNumber_5_14;
  ViewMaterialInputComponent0 _compView_6;
  import1.MaterialInputComponent _MaterialInputComponent_6_5;
  import1.MaterialInputValueAccessor _MaterialInputValueAccessor_6_6;
  import1.NgControlName _NgControlName_6_7;
  import1.RequiredValidator _RequiredValidator_6_8;
  import1.ServiceB __Service_6_9;
  import1.DeferredValidator __DeferredValidator_6_10;
  List<import1.Validator> __MultiToken_6_11;
  int __luckyNumber_6_15;
  ViewMaterialAutoSuggestInputComponent0 _compView_7;
  import1.MaterialAutoSuggestInputComponent _MaterialAutoSuggestInputComponent_7_5;
  import1.NgControlName _NgControlName_7_6;
  import1.RequiredValidator _RequiredValidator_7_7;
  List<import1.Validator> __MultiToken_7_13;
  ViewMaterialInputComponent0 _compView_8;
  import1.MaterialInputComponent _MaterialInputComponent_8_5;
  import1.MaterialInputValueAccessor _MaterialInputValueAccessor_8_6;
  import1.NgControlName _NgControlName_8_7;
  import1.ServiceB __Service_8_8;
  import1.DeferredValidator __DeferredValidator_8_9;
  List<import1.Validator> __MultiToken_8_10;
  int __luckyNumber_8_14;
  static import3.ComponentStyles _componentStyles;
  ViewAppComponent0(import4.RenderView parentView, int parentIndex) : super(import5.ViewType.component, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    initComponentStyles();
    rootEl = import7.document.createElement('app');
  }
  import1.ServiceB get _Service_1_9 {
    if ((__Service_1_9 == null)) {
      (__Service_1_9 = import1.ServiceB());
    }
    return __Service_1_9;
  }

  import1.DeferredValidator get _DeferredValidator_1_10 {
    if ((__DeferredValidator_1_10 == null)) {
      (__DeferredValidator_1_10 = import1.DeferredValidator());
    }
    return __DeferredValidator_1_10;
  }

  List<import1.Validator> get _MultiToken_1_11 {
    if ((__MultiToken_1_11 == null)) {
      (__MultiToken_1_11 = [_DeferredValidator_1_10, _RequiredValidator_1_8]);
    }
    return __MultiToken_1_11;
  }

  int get _luckyNumber_1_15 {
    if ((__luckyNumber_1_15 == null)) {
      (__luckyNumber_1_15 = 12);
    }
    return __luckyNumber_1_15;
  }

  import1.ServiceB get _Service_4_9 {
    if ((__Service_4_9 == null)) {
      (__Service_4_9 = import1.ServiceB());
    }
    return __Service_4_9;
  }

  import1.DeferredValidator get _DeferredValidator_4_10 {
    if ((__DeferredValidator_4_10 == null)) {
      (__DeferredValidator_4_10 = import1.DeferredValidator());
    }
    return __DeferredValidator_4_10;
  }

  List<import1.Validator> get _MultiToken_4_11 {
    if ((__MultiToken_4_11 == null)) {
      (__MultiToken_4_11 = [_DeferredValidator_4_10, _RequiredValidator_4_8]);
    }
    return __MultiToken_4_11;
  }

  int get _luckyNumber_4_15 {
    if ((__luckyNumber_4_15 == null)) {
      (__luckyNumber_4_15 = 12);
    }
    return __luckyNumber_4_15;
  }

  import1.ServiceB get _Service_5_8 {
    if ((__Service_5_8 == null)) {
      (__Service_5_8 = import1.ServiceB());
    }
    return __Service_5_8;
  }

  import1.DeferredValidator get _DeferredValidator_5_9 {
    if ((__DeferredValidator_5_9 == null)) {
      (__DeferredValidator_5_9 = import1.DeferredValidator());
    }
    return __DeferredValidator_5_9;
  }

  List<import1.Validator> get _MultiToken_5_10 {
    if ((__MultiToken_5_10 == null)) {
      (__MultiToken_5_10 = [_DeferredValidator_5_9]);
    }
    return __MultiToken_5_10;
  }

  int get _luckyNumber_5_14 {
    if ((__luckyNumber_5_14 == null)) {
      (__luckyNumber_5_14 = 12);
    }
    return __luckyNumber_5_14;
  }

  import1.ServiceB get _Service_6_9 {
    if ((__Service_6_9 == null)) {
      (__Service_6_9 = import1.ServiceB());
    }
    return __Service_6_9;
  }

  import1.DeferredValidator get _DeferredValidator_6_10 {
    if ((__DeferredValidator_6_10 == null)) {
      (__DeferredValidator_6_10 = import1.DeferredValidator());
    }
    return __DeferredValidator_6_10;
  }

  List<import1.Validator> get _MultiToken_6_11 {
    if ((__MultiToken_6_11 == null)) {
      (__MultiToken_6_11 = [_DeferredValidator_6_10, _RequiredValidator_6_8]);
    }
    return __MultiToken_6_11;
  }

  int get _luckyNumber_6_15 {
    if ((__luckyNumber_6_15 == null)) {
      (__luckyNumber_6_15 = 12);
    }
    return __luckyNumber_6_15;
  }

  List<import1.Validator> get _MultiToken_7_13 {
    if ((__MultiToken_7_13 == null)) {
      (__MultiToken_7_13 = [_RequiredValidator_7_7]);
    }
    return __MultiToken_7_13;
  }

  import1.ServiceB get _Service_8_8 {
    if ((__Service_8_8 == null)) {
      (__Service_8_8 = import1.ServiceB());
    }
    return __Service_8_8;
  }

  import1.DeferredValidator get _DeferredValidator_8_9 {
    if ((__DeferredValidator_8_9 == null)) {
      (__DeferredValidator_8_9 = import1.DeferredValidator());
    }
    return __DeferredValidator_8_9;
  }

  List<import1.Validator> get _MultiToken_8_10 {
    if ((__MultiToken_8_10 == null)) {
      (__MultiToken_8_10 = [_DeferredValidator_8_9]);
    }
    return __MultiToken_8_10;
  }

  int get _luckyNumber_8_14 {
    if ((__luckyNumber_8_14 == null)) {
      (__luckyNumber_8_14 = 12);
    }
    return __luckyNumber_8_14;
  }

  static String get _debugComponentUrl {
    return (import8.isDevMode ? 'asset:_goldens/test/_files/di/injector_get_internal.dart' : null);
  }

  @override
  ComponentRef<import1.AppComponent> build() {
    final import7.HtmlElement parentRenderNode = initViewRoot();
    final doc = import7.document;
    final _el_0 = import10.appendElement(doc, parentRenderNode, 'form');
    _NgForm_0_5 = import1.NgForm();
    _compView_1 = ViewMaterialInputComponent0(this, 1);
    final _el_1 = _compView_1.rootEl;
    _el_0.append(_el_1);
    import10.setAttribute(_el_1, 'ngControl', 'name');
    import10.setAttribute(_el_1, 'required', '');
    _MaterialInputComponent_1_5 = import1.MaterialInputComponent();
    _MaterialInputValueAccessor_1_6 = import1.MaterialInputValueAccessor();
    _NgControlName_1_7 = import1.NgControlName();
    _RequiredValidator_1_8 = import1.RequiredValidator();
    final _el_2 = doc.createElement('material-icon');
    import10.setAttribute(_el_2, 'tooltipTarget', '');
    import10.setAttribute(_el_2, 'trailing', '');
    _compView_1.create(_MaterialInputComponent_1_5, [
      [_el_2]
    ]);
    final _el_3 = import10.appendDiv(doc, _el_0);
    import10.setAttribute(_el_3, 'ngControlGroup', 'address');
    _NgControlGroup_3_5 = import1.NgControlGroup();
    _compView_4 = ViewMaterialInputComponent0(this, 4);
    final _el_4 = _compView_4.rootEl;
    _el_3.append(_el_4);
    import10.setAttribute(_el_4, 'ngControl', 'address1');
    import10.setAttribute(_el_4, 'required', '');
    _MaterialInputComponent_4_5 = import1.MaterialInputComponent();
    _MaterialInputValueAccessor_4_6 = import1.MaterialInputValueAccessor();
    _NgControlName_4_7 = import1.NgControlName();
    _RequiredValidator_4_8 = import1.RequiredValidator();
    _compView_4.create(_MaterialInputComponent_4_5, [const []]);
    _compView_5 = ViewMaterialInputComponent0(this, 5);
    final _el_5 = _compView_5.rootEl;
    _el_3.append(_el_5);
    import10.setAttribute(_el_5, 'ngControl', 'address2');
    _MaterialInputComponent_5_5 = import1.MaterialInputComponent();
    _MaterialInputValueAccessor_5_6 = import1.MaterialInputValueAccessor();
    _NgControlName_5_7 = import1.NgControlName();
    _compView_5.create(_MaterialInputComponent_5_5, [const []]);
    _compView_6 = ViewMaterialInputComponent0(this, 6);
    final _el_6 = _compView_6.rootEl;
    _el_3.append(_el_6);
    import10.setAttribute(_el_6, 'ngControl', 'city');
    import10.setAttribute(_el_6, 'required', '');
    _MaterialInputComponent_6_5 = import1.MaterialInputComponent();
    _MaterialInputValueAccessor_6_6 = import1.MaterialInputValueAccessor();
    _NgControlName_6_7 = import1.NgControlName();
    _RequiredValidator_6_8 = import1.RequiredValidator();
    _compView_6.create(_MaterialInputComponent_6_5, [const []]);
    _compView_7 = ViewMaterialAutoSuggestInputComponent0(this, 7);
    final _el_7 = _compView_7.rootEl;
    _el_3.append(_el_7);
    import10.setAttribute(_el_7, 'ngControl', 'state');
    import10.setAttribute(_el_7, 'required', '');
    _MaterialAutoSuggestInputComponent_7_5 = import1.MaterialAutoSuggestInputComponent();
    _NgControlName_7_6 = import1.NgControlName();
    _RequiredValidator_7_7 = import1.RequiredValidator();
    _compView_7.create0(_MaterialAutoSuggestInputComponent_7_5);
    _compView_8 = ViewMaterialInputComponent0(this, 8);
    final _el_8 = _compView_8.rootEl;
    _el_3.append(_el_8);
    import10.setAttribute(_el_8, 'ngControl', 'zip');
    _MaterialInputComponent_8_5 = import1.MaterialInputComponent();
    _MaterialInputValueAccessor_8_6 = import1.MaterialInputValueAccessor();
    _NgControlName_8_7 = import1.NgControlName();
    _compView_8.create(_MaterialInputComponent_8_5, [const []]);
    init0();
  }

  @override
  dynamic injectorGetInternal(dynamic token, int nodeIndex, dynamic notFoundResult) {
    if ((nodeIndex <= 8)) {
      if (((1 <= nodeIndex) && (nodeIndex <= 2))) {
        if ((identical(token, const import11.OpaqueToken<int>('luckyNumber')) && (1 == nodeIndex))) {
          return _luckyNumber_1_15;
        }
        if ((((identical(token, import1.MaterialInputBase) || identical(token, import1.Focusable)) || identical(token, import1.HasDisabled)) || identical(token, import1.ReferenceDirective))) {
          return _MaterialInputComponent_1_5;
        }
        if (identical(token, import1.MaterialInputValueAccessor)) {
          return _MaterialInputValueAccessor_1_6;
        }
        if (identical(token, import1.NgControl)) {
          return _NgControlName_1_7;
        }
        if (identical(token, import1.Service)) {
          return _Service_1_9;
        }
        if (identical(token, import1.DeferredValidator)) {
          return _DeferredValidator_1_10;
        }
        if (identical(token, const import11.MultiToken<import12.Validator>())) {
          return _MultiToken_1_11;
        }
      }
      if ((3 <= nodeIndex)) {
        if ((4 == nodeIndex)) {
          if ((((identical(token, import1.MaterialInputBase) || identical(token, import1.Focusable)) || identical(token, import1.HasDisabled)) || identical(token, import1.ReferenceDirective))) {
            return _MaterialInputComponent_4_5;
          }
          if (identical(token, import1.MaterialInputValueAccessor)) {
            return _MaterialInputValueAccessor_4_6;
          }
          if (identical(token, import1.NgControl)) {
            return _NgControlName_4_7;
          }
          if (identical(token, import1.Service)) {
            return _Service_4_9;
          }
          if (identical(token, import1.DeferredValidator)) {
            return _DeferredValidator_4_10;
          }
          if (identical(token, const import11.MultiToken<import12.Validator>())) {
            return _MultiToken_4_11;
          }
          if (identical(token, const import11.OpaqueToken<int>('luckyNumber'))) {
            return _luckyNumber_4_15;
          }
        }
        if ((5 == nodeIndex)) {
          if ((((identical(token, import1.MaterialInputBase) || identical(token, import1.Focusable)) || identical(token, import1.HasDisabled)) || identical(token, import1.ReferenceDirective))) {
            return _MaterialInputComponent_5_5;
          }
          if (identical(token, import1.MaterialInputValueAccessor)) {
            return _MaterialInputValueAccessor_5_6;
          }
          if (identical(token, import1.NgControl)) {
            return _NgControlName_5_7;
          }
          if (identical(token, import1.Service)) {
            return _Service_5_8;
          }
          if (identical(token, import1.DeferredValidator)) {
            return _DeferredValidator_5_9;
          }
          if (identical(token, const import11.MultiToken<import12.Validator>())) {
            return _MultiToken_5_10;
          }
          if (identical(token, const import11.OpaqueToken<int>('luckyNumber'))) {
            return _luckyNumber_5_14;
          }
        }
        if ((6 == nodeIndex)) {
          if ((((identical(token, import1.MaterialInputBase) || identical(token, import1.Focusable)) || identical(token, import1.HasDisabled)) || identical(token, import1.ReferenceDirective))) {
            return _MaterialInputComponent_6_5;
          }
          if (identical(token, import1.MaterialInputValueAccessor)) {
            return _MaterialInputValueAccessor_6_6;
          }
          if (identical(token, import1.NgControl)) {
            return _NgControlName_6_7;
          }
          if (identical(token, import1.Service)) {
            return _Service_6_9;
          }
          if (identical(token, import1.DeferredValidator)) {
            return _DeferredValidator_6_10;
          }
          if (identical(token, const import11.MultiToken<import12.Validator>())) {
            return _MultiToken_6_11;
          }
          if (identical(token, const import11.OpaqueToken<int>('luckyNumber'))) {
            return _luckyNumber_6_15;
          }
        }
        if ((7 == nodeIndex)) {
          if (((((identical(token, import1.MaterialAutoSuggestInputComponent) || identical(token, import1.HasDisabled)) || identical(token, import1.HasRenderer)) || identical(token, import1.SelectionContainer)) || identical(token, import1.Focusable))) {
            return _MaterialAutoSuggestInputComponent_7_5;
          }
          if (identical(token, import1.NgControl)) {
            return _NgControlName_7_6;
          }
          if (identical(token, const import11.MultiToken<import12.Validator>())) {
            return _MultiToken_7_13;
          }
        }
        if ((8 == nodeIndex)) {
          if ((((identical(token, import1.MaterialInputBase) || identical(token, import1.Focusable)) || identical(token, import1.HasDisabled)) || identical(token, import1.ReferenceDirective))) {
            return _MaterialInputComponent_8_5;
          }
          if (identical(token, import1.MaterialInputValueAccessor)) {
            return _MaterialInputValueAccessor_8_6;
          }
          if (identical(token, import1.NgControl)) {
            return _NgControlName_8_7;
          }
          if (identical(token, import1.Service)) {
            return _Service_8_8;
          }
          if (identical(token, import1.DeferredValidator)) {
            return _DeferredValidator_8_9;
          }
          if (identical(token, const import11.MultiToken<import12.Validator>())) {
            return _MultiToken_8_10;
          }
          if (identical(token, const import11.OpaqueToken<int>('luckyNumber'))) {
            return _luckyNumber_8_14;
          }
        }
        if (identical(token, import1.ControlContainer)) {
          return _NgControlGroup_3_5;
        }
      }
      if ((identical(token, import1.NgForm) || identical(token, import1.ControlContainer))) {
        return _NgForm_0_5;
      }
    }
    return notFoundResult;
  }

  @override
  void detectChangesInternal() {
    _compView_1.detectChanges();
    _compView_4.detectChanges();
    _compView_5.detectChanges();
    _compView_6.detectChanges();
    _compView_7.detectChanges();
    _compView_8.detectChanges();
  }

  @override
  void destroyInternal() {
    _compView_1.destroyInternalState();
    _compView_4.destroyInternalState();
    _compView_5.destroyInternalState();
    _compView_6.destroyInternalState();
    _compView_7.destroyInternalState();
    _compView_8.destroyInternalState();
  }

  @override
  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      (_componentStyles = (styles = (_componentStyles = import3.ComponentStyles.unscoped(styles$AppComponent, _debugComponentUrl))));
    }
    componentStyles = styles;
  }
}

const ComponentFactory<import1.AppComponent> _AppComponentNgFactory = const ComponentFactory('app', viewFactory_AppComponentHost0);
ComponentFactory<import1.AppComponent> get AppComponentNgFactory {
  return _AppComponentNgFactory;
}

final List<dynamic> styles$AppComponentHost = const [];

class _ViewAppComponentHost0 extends AppView<import1.AppComponent> {
  ViewAppComponent0 _compView_0;
  import1.AppComponent _AppComponent_0_5;
  _ViewAppComponentHost0(import4.RenderView parentView, int parentIndex) : super(import5.ViewType.host, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways);
  @override
  ComponentRef<import1.AppComponent> build() {
    _compView_0 = ViewAppComponent0(this, 0);
    final _el_0 = _compView_0.rootEl;
    _AppComponent_0_5 = import1.AppComponent();
    _compView_0.create(_AppComponent_0_5, projectedNodes);
    init1(_el_0);
    return ComponentRef(0, this, _el_0, _AppComponent_0_5);
  }

  @override
  void detectChangesInternal() {
    _compView_0.detectChanges();
  }

  @override
  void destroyInternal() {
    _compView_0.destroyInternalState();
  }
}

AppView<import1.AppComponent> viewFactory_AppComponentHost0() {
  return _ViewAppComponentHost0(null, null);
}

final List<dynamic> styles$MaterialAutoSuggestInputComponent = const [];

class ViewMaterialAutoSuggestInputComponent0 extends AppView<import1.MaterialAutoSuggestInputComponent> {
  static import3.ComponentStyles _componentStyles;
  ViewMaterialAutoSuggestInputComponent0(import4.RenderView parentView, int parentIndex) : super(import5.ViewType.component, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    initComponentStyles();
    rootEl = import7.document.createElement('material-auto-suggest-input');
  }
  static String get _debugComponentUrl {
    return (import8.isDevMode ? 'asset:_goldens/test/_files/di/injector_get_internal.dart' : null);
  }

  @override
  ComponentRef<import1.MaterialAutoSuggestInputComponent> build() {
    final import7.HtmlElement parentRenderNode = initViewRoot();
    init0();
  }

  @override
  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      (_componentStyles = (styles = (_componentStyles = import3.ComponentStyles.unscoped(styles$MaterialAutoSuggestInputComponent, _debugComponentUrl))));
    }
    componentStyles = styles;
  }
}

const ComponentFactory<import1.MaterialAutoSuggestInputComponent> _MaterialAutoSuggestInputComponentNgFactory = const ComponentFactory('material-auto-suggest-input', viewFactory_MaterialAutoSuggestInputComponentHost0);
ComponentFactory<import1.MaterialAutoSuggestInputComponent> get MaterialAutoSuggestInputComponentNgFactory {
  return _MaterialAutoSuggestInputComponentNgFactory;
}

final List<dynamic> styles$MaterialAutoSuggestInputComponentHost = const [];

class _ViewMaterialAutoSuggestInputComponentHost0 extends AppView<import1.MaterialAutoSuggestInputComponent> {
  ViewMaterialAutoSuggestInputComponent0 _compView_0;
  import1.MaterialAutoSuggestInputComponent _MaterialAutoSuggestInputComponent_0_5;
  _ViewMaterialAutoSuggestInputComponentHost0(import4.RenderView parentView, int parentIndex) : super(import5.ViewType.host, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways);
  @override
  ComponentRef<import1.MaterialAutoSuggestInputComponent> build() {
    _compView_0 = ViewMaterialAutoSuggestInputComponent0(this, 0);
    final _el_0 = _compView_0.rootEl;
    _MaterialAutoSuggestInputComponent_0_5 = import1.MaterialAutoSuggestInputComponent();
    _compView_0.create(_MaterialAutoSuggestInputComponent_0_5, projectedNodes);
    init1(_el_0);
    return ComponentRef(0, this, _el_0, _MaterialAutoSuggestInputComponent_0_5);
  }

  @override
  dynamic injectorGetInternal(dynamic token, int nodeIndex, dynamic notFoundResult) {
    if ((((((identical(token, import1.MaterialAutoSuggestInputComponent) || identical(token, import1.HasDisabled)) || identical(token, import1.HasRenderer)) || identical(token, import1.SelectionContainer)) || identical(token, import1.Focusable)) && (0 == nodeIndex))) {
      return _MaterialAutoSuggestInputComponent_0_5;
    }
    return notFoundResult;
  }

  @override
  void detectChangesInternal() {
    _compView_0.detectChanges();
  }

  @override
  void destroyInternal() {
    _compView_0.destroyInternalState();
  }
}

AppView<import1.MaterialAutoSuggestInputComponent> viewFactory_MaterialAutoSuggestInputComponentHost0() {
  return _ViewMaterialAutoSuggestInputComponentHost0(null, null);
}

final List<dynamic> styles$MaterialInputComponent = const [];

class ViewMaterialInputComponent0 extends AppView<import1.MaterialInputComponent> {
  static import3.ComponentStyles _componentStyles;
  ViewMaterialInputComponent0(import4.RenderView parentView, int parentIndex) : super(import5.ViewType.component, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    initComponentStyles();
    rootEl = import7.document.createElement('material-input');
  }
  static String get _debugComponentUrl {
    return (import8.isDevMode ? 'asset:_goldens/test/_files/di/injector_get_internal.dart' : null);
  }

  @override
  ComponentRef<import1.MaterialInputComponent> build() {
    final import7.HtmlElement parentRenderNode = initViewRoot();
    project(parentRenderNode, 0);
    init0();
  }

  @override
  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      (_componentStyles = (styles = (_componentStyles = import3.ComponentStyles.unscoped(styles$MaterialInputComponent, _debugComponentUrl))));
    }
    componentStyles = styles;
  }
}

const ComponentFactory<import1.MaterialInputComponent> _MaterialInputComponentNgFactory = const ComponentFactory('material-input', viewFactory_MaterialInputComponentHost0);
ComponentFactory<import1.MaterialInputComponent> get MaterialInputComponentNgFactory {
  return _MaterialInputComponentNgFactory;
}

final List<dynamic> styles$MaterialInputComponentHost = const [];

class _ViewMaterialInputComponentHost0 extends AppView<import1.MaterialInputComponent> {
  ViewMaterialInputComponent0 _compView_0;
  import1.MaterialInputComponent _MaterialInputComponent_0_5;
  import1.ServiceB __Service_0_6;
  import1.DeferredValidator __DeferredValidator_0_7;
  List<import1.Validator> __MultiToken_0_8;
  int __luckyNumber_0_12;
  _ViewMaterialInputComponentHost0(import4.RenderView parentView, int parentIndex) : super(import5.ViewType.host, parentView, parentIndex, ChangeDetectionStrategy.CheckAlways);
  import1.ServiceB get _Service_0_6 {
    if ((__Service_0_6 == null)) {
      (__Service_0_6 = import1.ServiceB());
    }
    return __Service_0_6;
  }

  import1.DeferredValidator get _DeferredValidator_0_7 {
    if ((__DeferredValidator_0_7 == null)) {
      (__DeferredValidator_0_7 = import1.DeferredValidator());
    }
    return __DeferredValidator_0_7;
  }

  List<import1.Validator> get _MultiToken_0_8 {
    if ((__MultiToken_0_8 == null)) {
      (__MultiToken_0_8 = [_DeferredValidator_0_7]);
    }
    return __MultiToken_0_8;
  }

  int get _luckyNumber_0_12 {
    if ((__luckyNumber_0_12 == null)) {
      (__luckyNumber_0_12 = 12);
    }
    return __luckyNumber_0_12;
  }

  @override
  ComponentRef<import1.MaterialInputComponent> build() {
    _compView_0 = ViewMaterialInputComponent0(this, 0);
    final _el_0 = _compView_0.rootEl;
    _MaterialInputComponent_0_5 = import1.MaterialInputComponent();
    _compView_0.create(_MaterialInputComponent_0_5, projectedNodes);
    init1(_el_0);
    return ComponentRef(0, this, _el_0, _MaterialInputComponent_0_5);
  }

  @override
  dynamic injectorGetInternal(dynamic token, int nodeIndex, dynamic notFoundResult) {
    if ((0 == nodeIndex)) {
      if ((((identical(token, import1.MaterialInputBase) || identical(token, import1.Focusable)) || identical(token, import1.HasDisabled)) || identical(token, import1.ReferenceDirective))) {
        return _MaterialInputComponent_0_5;
      }
      if (identical(token, import1.Service)) {
        return _Service_0_6;
      }
      if (identical(token, import1.DeferredValidator)) {
        return _DeferredValidator_0_7;
      }
      if (identical(token, const import11.MultiToken<import12.Validator>())) {
        return _MultiToken_0_8;
      }
      if (identical(token, const import11.OpaqueToken<int>('luckyNumber'))) {
        return _luckyNumber_0_12;
      }
    }
    return notFoundResult;
  }

  @override
  void detectChangesInternal() {
    _compView_0.detectChanges();
  }

  @override
  void destroyInternal() {
    _compView_0.destroyInternalState();
  }
}

AppView<import1.MaterialInputComponent> viewFactory_MaterialInputComponentHost0() {
  return _ViewMaterialInputComponentHost0(null, null);
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(AppComponent, AppComponentNgFactory);
  _ngRef.registerComponent(MaterialAutoSuggestInputComponent, MaterialAutoSuggestInputComponentNgFactory);
  _ngRef.registerComponent(MaterialInputComponent, MaterialInputComponentNgFactory);
  _ref0.initReflector();
}

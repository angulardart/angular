// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'event_tearoff.dart';
export 'event_tearoff.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/core/linker/views/component_view.dart' as import0;
import 'event_tearoff.dart' as import1;
import 'package:angular/src/core/linker/style_encapsulation.dart' as import2;
import 'package:angular/src/core/linker/views/view.dart' as import3;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'dart:html' as import5;
import 'package:angular/src/runtime.dart' as import6;
import 'package:angular/src/runtime/dom_helpers.dart' as import7;
import 'package:angular/angular.dart';
import 'package:angular/src/core/linker/views/host_view.dart' as import9;

final List<dynamic> styles$UsesEventTearoff = const [];

// View for component UsesEventTearoff in asset:_goldens/test/_files/event_tearoff.dart (changeDetection: Default)
class ViewUsesEventTearoff0 extends import0.ComponentView<import1.UsesEventTearoff> {
  static import2.ComponentStyles _componentStyles;
  ViewUsesEventTearoff0(import3.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import5.document.createElement('uses-event-tearoff');
  }
  static String get _debugComponentUrl {
    return (import6.isDevMode ? 'asset:_goldens/test/_files/event_tearoff.dart' : null);
  }

  @override
  void build() {
    final _ctx = this.ctx;
    final import5.HtmlElement parentRenderNode = this.initViewRoot();
    final doc = import5.document;
    final _el_0 = import7.appendElement(doc, parentRenderNode, 'button');
    _el_0.addEventListener('click', this.eventHandler1(_ctx.onClick));
    _el_0.addEventListener('blur', this.eventHandler0(_ctx.onBlur));
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import2.ComponentStyles.unscoped(styles$UsesEventTearoff, _debugComponentUrl));
      if (import6.isDevMode) {
        import2.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.UsesEventTearoff> _UsesEventTearoffNgFactory = const ComponentFactory('uses-event-tearoff', viewFactory_UsesEventTearoffHost0);
ComponentFactory<import1.UsesEventTearoff> get UsesEventTearoffNgFactory {
  return _UsesEventTearoffNgFactory;
}

final List<dynamic> styles$UsesEventTearoffHost = const [];

// Host for component UsesEventTearoff in asset:_goldens/test/_files/event_tearoff.dart (changeDetection: Default)
class _ViewUsesEventTearoffHost0 extends import9.HostView<import1.UsesEventTearoff> {
  @override
  void build() {
    // Child component UsesEventTearoff in asset:_goldens/test/_files/event_tearoff.dart (changeDetection: Default)
    this.componentView = ViewUsesEventTearoff0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.UsesEventTearoff();
    this.initRootNode(_el_0);
  }
}

import9.HostView<import1.UsesEventTearoff> viewFactory_UsesEventTearoffHost0() {
  return _ViewUsesEventTearoffHost0();
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(UsesEventTearoff, UsesEventTearoffNgFactory);
  _ref0.initReflector();
}

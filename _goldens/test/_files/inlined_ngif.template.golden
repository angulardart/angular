// **************************************************************************
// Generator: AngularDart Compiler
// **************************************************************************

import 'inlined_ngif.dart';
export 'inlined_ngif.dart';
import 'package:angular/src/di/reflector.dart' as _ngRef;
import 'package:angular/angular.template.dart' as _ref0;
import 'package:angular/src/core/linker/views/component_view.dart' as import0;
import 'inlined_ngif.dart' as import1;
import 'package:angular/src/core/linker/view_container.dart';
import 'package:angular/src/common/directives/ng_if.dart';
import 'package:angular/src/core/linker/style_encapsulation.dart' as import4;
import 'package:angular/src/core/linker/views/view.dart' as import5;
import 'package:angular/src/core/change_detection/change_detection.dart';
import 'dart:html' as import7;
import 'package:angular/src/runtime.dart' as import8;
import 'package:angular/src/runtime/dom_helpers.dart' as import9;
import 'package:angular/src/core/linker/template_ref.dart';
import 'package:angular/angular.dart';
import 'package:angular/src/core/linker/views/embedded_view.dart' as import12;
import 'package:angular/src/core/linker/views/render_view.dart' as import13;
import 'package:angular/src/core/linker/views/host_view.dart' as import14;
import 'package:angular/src/runtime/interpolate.dart' as import15;

final List<dynamic> styles$InlinedNgIfComponent = const [];

// View for component InlinedNgIfComponent in asset:_goldens/test/_files/inlined_ngif.dart (changeDetection: Default)
class ViewInlinedNgIfComponent0 extends import0.ComponentView<import1.InlinedNgIfComponent> {
  ViewContainer _appEl_0;
  NgIf _NgIf_0_9;
  static import4.ComponentStyles _componentStyles;
  ViewInlinedNgIfComponent0(import5.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import7.document.createElement('inlined-ngif');
  }
  static String get _debugComponentUrl {
    return (import8.isDevMode ? 'asset:_goldens/test/_files/inlined_ngif.dart' : null);
  }

  @override
  void build() {
    final import7.HtmlElement parentRenderNode = this.initViewRoot();
    final _anchor_0 = import9.appendAnchor(parentRenderNode);
    this._appEl_0 = ViewContainer(0, null, this, _anchor_0);
    TemplateRef _TemplateRef_0_8 = TemplateRef(this._appEl_0, viewFactory_InlinedNgIfComponent1);
    this._NgIf_0_9 = NgIf(this._appEl_0, _TemplateRef_0_8);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    this._NgIf_0_9.ngIf = _ctx.maybeTrue;
    this._appEl_0.detectChangesInNestedViews();
  }

  @override
  void destroyInternal() {
    this._appEl_0.destroyNestedViews();
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import4.ComponentStyles.unscoped(styles$InlinedNgIfComponent, _debugComponentUrl));
      if (import8.isDevMode) {
        import4.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.InlinedNgIfComponent> _InlinedNgIfComponentNgFactory = const ComponentFactory('inlined-ngif', viewFactory_InlinedNgIfComponentHost0);
ComponentFactory<import1.InlinedNgIfComponent> get InlinedNgIfComponentNgFactory {
  return _InlinedNgIfComponentNgFactory;
}

class _ViewInlinedNgIfComponent1 extends import12.EmbeddedView<import1.InlinedNgIfComponent> {
  _ViewInlinedNgIfComponent1(import13.RenderView parentView, int parentIndex) : super(parentView, parentIndex);
  @override
  void build() {
    final doc = import7.document;
    final _el_0 = doc.createElement('div');
    final _text_1 = import9.appendText(_el_0, 'Hello World!');
    this.initRootNode(_el_0);
  }
}

import12.EmbeddedView<void> viewFactory_InlinedNgIfComponent1(import13.RenderView parentView, int parentIndex) {
  return _ViewInlinedNgIfComponent1(parentView, parentIndex);
}

final List<dynamic> styles$InlinedNgIfComponentHost = const [];

// Host for component InlinedNgIfComponent in asset:_goldens/test/_files/inlined_ngif.dart (changeDetection: Default)
class _ViewInlinedNgIfComponentHost0 extends import14.HostView<import1.InlinedNgIfComponent> {
  @override
  void build() {
    // Child component InlinedNgIfComponent in asset:_goldens/test/_files/inlined_ngif.dart (changeDetection: Default)
    this.componentView = ViewInlinedNgIfComponent0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.InlinedNgIfComponent();
    this.initRootNode(_el_0);
  }
}

import14.HostView<import1.InlinedNgIfComponent> viewFactory_InlinedNgIfComponentHost0() {
  return _ViewInlinedNgIfComponentHost0();
}

final List<dynamic> styles$IgnoredNgIfComponent = const [];

// View for component IgnoredNgIfComponent in asset:_goldens/test/_files/inlined_ngif.dart (changeDetection: Default)
class ViewIgnoredNgIfComponent0 extends import0.ComponentView<import1.IgnoredNgIfComponent> {
  ViewContainer _appEl_0;
  NgIf _NgIf_0_9;
  static import4.ComponentStyles _componentStyles;
  ViewIgnoredNgIfComponent0(import5.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import7.document.createElement('inlined-ngif');
  }
  static String get _debugComponentUrl {
    return (import8.isDevMode ? 'asset:_goldens/test/_files/inlined_ngif.dart' : null);
  }

  @override
  void build() {
    final import7.HtmlElement parentRenderNode = this.initViewRoot();
    final _anchor_0 = import9.appendAnchor(parentRenderNode);
    this._appEl_0 = ViewContainer(0, null, this, _anchor_0);
    TemplateRef _TemplateRef_0_8 = TemplateRef(this._appEl_0, viewFactory_IgnoredNgIfComponent1);
    this._NgIf_0_9 = NgIf(this._appEl_0, _TemplateRef_0_8);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    bool firstCheck = this.firstCheck;
    if (firstCheck) {
      (this._NgIf_0_9.ngIf = (_ctx.name == 'World'));
    }
    this._appEl_0.detectChangesInNestedViews();
  }

  @override
  void destroyInternal() {
    this._appEl_0.destroyNestedViews();
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import4.ComponentStyles.unscoped(styles$IgnoredNgIfComponent, _debugComponentUrl));
      if (import8.isDevMode) {
        import4.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.IgnoredNgIfComponent> _IgnoredNgIfComponentNgFactory = const ComponentFactory('inlined-ngif', viewFactory_IgnoredNgIfComponentHost0);
ComponentFactory<import1.IgnoredNgIfComponent> get IgnoredNgIfComponentNgFactory {
  return _IgnoredNgIfComponentNgFactory;
}

class _ViewIgnoredNgIfComponent1 extends import12.EmbeddedView<import1.IgnoredNgIfComponent> {
  _ViewIgnoredNgIfComponent1(import13.RenderView parentView, int parentIndex) : super(parentView, parentIndex);
  @override
  void build() {
    final _ctx = this.ctx;
    final doc = import7.document;
    final _el_0 = doc.createElement('div');
    final _text_1 = import9.appendText(_el_0, 'Hello ');
    final _text_2 = import9.appendText(_el_0, import15.interpolateString0(_ctx.name));
    final _text_3 = import9.appendText(_el_0, '!');
    this.initRootNode(_el_0);
  }
}

import12.EmbeddedView<void> viewFactory_IgnoredNgIfComponent1(import13.RenderView parentView, int parentIndex) {
  return _ViewIgnoredNgIfComponent1(parentView, parentIndex);
}

final List<dynamic> styles$IgnoredNgIfComponentHost = const [];

// Host for component IgnoredNgIfComponent in asset:_goldens/test/_files/inlined_ngif.dart (changeDetection: Default)
class _ViewIgnoredNgIfComponentHost0 extends import14.HostView<import1.IgnoredNgIfComponent> {
  @override
  void build() {
    // Child component IgnoredNgIfComponent in asset:_goldens/test/_files/inlined_ngif.dart (changeDetection: Default)
    this.componentView = ViewIgnoredNgIfComponent0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.IgnoredNgIfComponent();
    this.initRootNode(_el_0);
  }
}

import14.HostView<import1.IgnoredNgIfComponent> viewFactory_IgnoredNgIfComponentHost0() {
  return _ViewIgnoredNgIfComponentHost0();
}

final List<dynamic> styles$InlinedNgIfWithImmutableConditionComponent = const [];

// View for component InlinedNgIfWithImmutableConditionComponent in asset:_goldens/test/_files/inlined_ngif.dart (changeDetection: Default)
class ViewInlinedNgIfWithImmutableConditionComponent0 extends import0.ComponentView<import1.InlinedNgIfWithImmutableConditionComponent> {
  ViewContainer _appEl_0;
  NgIf _NgIf_0_9;
  static import4.ComponentStyles _componentStyles;
  ViewInlinedNgIfWithImmutableConditionComponent0(import5.View parentView, int parentIndex) : super(parentView, parentIndex, ChangeDetectionStrategy.CheckAlways) {
    this.initComponentStyles();
    this.rootElement = import7.document.createElement('inlined-ngif-with-immutable-condition');
  }
  static String get _debugComponentUrl {
    return (import8.isDevMode ? 'asset:_goldens/test/_files/inlined_ngif.dart' : null);
  }

  @override
  void build() {
    final import7.HtmlElement parentRenderNode = this.initViewRoot();
    final _anchor_0 = import9.appendAnchor(parentRenderNode);
    this._appEl_0 = ViewContainer(0, null, this, _anchor_0);
    TemplateRef _TemplateRef_0_8 = TemplateRef(this._appEl_0, viewFactory_InlinedNgIfWithImmutableConditionComponent1);
    this._NgIf_0_9 = NgIf(this._appEl_0, _TemplateRef_0_8);
  }

  @override
  void detectChangesInternal() {
    final _ctx = this.ctx;
    bool firstCheck = this.firstCheck;
    if (firstCheck) {
      (this._NgIf_0_9.ngIf = _ctx.alwaysTrue);
    }
    this._appEl_0.detectChangesInNestedViews();
  }

  @override
  void destroyInternal() {
    this._appEl_0.destroyNestedViews();
  }

  static void _debugClearComponentStyles() {
    _componentStyles = null;
  }

  void initComponentStyles() {
    var styles = _componentStyles;
    if (identical(styles, null)) {
      _componentStyles = (styles = import4.ComponentStyles.unscoped(styles$InlinedNgIfWithImmutableConditionComponent, _debugComponentUrl));
      if (import8.isDevMode) {
        import4.ComponentStyles.debugOnClear(_debugClearComponentStyles);
      }
    }
    this.componentStyles = styles;
  }
}

const ComponentFactory<import1.InlinedNgIfWithImmutableConditionComponent> _InlinedNgIfWithImmutableConditionComponentNgFactory = const ComponentFactory('inlined-ngif-with-immutable-condition', viewFactory_InlinedNgIfWithImmutableConditionComponentHost0);
ComponentFactory<import1.InlinedNgIfWithImmutableConditionComponent> get InlinedNgIfWithImmutableConditionComponentNgFactory {
  return _InlinedNgIfWithImmutableConditionComponentNgFactory;
}

class _ViewInlinedNgIfWithImmutableConditionComponent1 extends import12.EmbeddedView<import1.InlinedNgIfWithImmutableConditionComponent> {
  _ViewInlinedNgIfWithImmutableConditionComponent1(import13.RenderView parentView, int parentIndex) : super(parentView, parentIndex);
  @override
  void build() {
    final doc = import7.document;
    final _el_0 = doc.createElement('div');
    final _text_1 = import9.appendText(_el_0, 'Hello World!');
    this.initRootNode(_el_0);
  }
}

import12.EmbeddedView<void> viewFactory_InlinedNgIfWithImmutableConditionComponent1(import13.RenderView parentView, int parentIndex) {
  return _ViewInlinedNgIfWithImmutableConditionComponent1(parentView, parentIndex);
}

final List<dynamic> styles$InlinedNgIfWithImmutableConditionComponentHost = const [];

// Host for component InlinedNgIfWithImmutableConditionComponent in asset:_goldens/test/_files/inlined_ngif.dart (changeDetection: Default)
class _ViewInlinedNgIfWithImmutableConditionComponentHost0 extends import14.HostView<import1.InlinedNgIfWithImmutableConditionComponent> {
  @override
  void build() {
    // Child component InlinedNgIfWithImmutableConditionComponent in asset:_goldens/test/_files/inlined_ngif.dart (changeDetection: Default)
    this.componentView = ViewInlinedNgIfWithImmutableConditionComponent0(this, 0);
    final _el_0 = this.componentView.rootElement;
    this.component = import1.InlinedNgIfWithImmutableConditionComponent();
    this.initRootNode(_el_0);
  }
}

import14.HostView<import1.InlinedNgIfWithImmutableConditionComponent> viewFactory_InlinedNgIfWithImmutableConditionComponentHost0() {
  return _ViewInlinedNgIfWithImmutableConditionComponentHost0();
}

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;

  _ngRef.registerComponent(InlinedNgIfComponent, InlinedNgIfComponentNgFactory);
  _ngRef.registerComponent(IgnoredNgIfComponent, IgnoredNgIfComponentNgFactory);
  _ngRef.registerComponent(InlinedNgIfWithImmutableConditionComponent, InlinedNgIfWithImmutableConditionComponentNgFactory);
  _ref0.initReflector();
}

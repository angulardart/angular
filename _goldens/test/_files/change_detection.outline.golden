// ignore_for_file: library_prefixes,unused_import,no_default_super_constructor_explicit,duplicate_import,unused_shown_name
// The .template.dart files also export the user code.
export 'change_detection.dart';

// Required for referencing runtime code.
import 'dart:html' as _html;
import 'package:angular/angular.dart' as _ng;
import 'package:angular/src/core/change_detection/directive_change_detector.dart' as _ng;
import 'package:angular/src/core/linker/app_view.dart' as _ng;

// Required for specifically referencing user code.
import 'change_detection.dart' as _user;

// Required for "type inference" (scoping).
import 'package:angular/angular.dart';

// For @Component class CheckOnceComponent.
external List<dynamic> get styles$CheckOnceComponent;
external _ng.ComponentFactory<_user.CheckOnceComponent> get CheckOnceComponentNgFactory;
external _ng.AppView<_user.CheckOnceComponent> viewFactory_CheckOnceComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewCheckOnceComponent0 extends _ng.AppView<_user.CheckOnceComponent> {
  external ViewCheckOnceComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class CheckedComponent.
external List<dynamic> get styles$CheckedComponent;
external _ng.ComponentFactory<_user.CheckedComponent> get CheckedComponentNgFactory;
external _ng.AppView<_user.CheckedComponent> viewFactory_CheckedComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewCheckedComponent0 extends _ng.AppView<_user.CheckedComponent> {
  external ViewCheckedComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class CheckAlwaysComponent.
external List<dynamic> get styles$CheckAlwaysComponent;
external _ng.ComponentFactory<_user.CheckAlwaysComponent> get CheckAlwaysComponentNgFactory;
external _ng.AppView<_user.CheckAlwaysComponent> viewFactory_CheckAlwaysComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewCheckAlwaysComponent0 extends _ng.AppView<_user.CheckAlwaysComponent> {
  external ViewCheckAlwaysComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class DetachedComponent.
external List<dynamic> get styles$DetachedComponent;
external _ng.ComponentFactory<_user.DetachedComponent> get DetachedComponentNgFactory;
external _ng.AppView<_user.DetachedComponent> viewFactory_DetachedComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewDetachedComponent0 extends _ng.AppView<_user.DetachedComponent> {
  external ViewDetachedComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class UsesOnPushComponent.
external List<dynamic> get styles$UsesOnPushComponent;
external _ng.ComponentFactory<_user.UsesOnPushComponent> get UsesOnPushComponentNgFactory;
external _ng.AppView<_user.UsesOnPushComponent> viewFactory_UsesOnPushComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewUsesOnPushComponent0 extends _ng.AppView<_user.UsesOnPushComponent> {
  external ViewUsesOnPushComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class OnPushComponent.
external List<dynamic> get styles$OnPushComponent;
external _ng.ComponentFactory<_user.OnPushComponent> get OnPushComponentNgFactory;
external _ng.AppView<_user.OnPushComponent> viewFactory_OnPushComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewOnPushComponent0 extends _ng.AppView<_user.OnPushComponent> {
  external ViewOnPushComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class OnPushChildComponent.
external List<dynamic> get styles$OnPushChildComponent;
external _ng.ComponentFactory<_user.OnPushChildComponent> get OnPushChildComponentNgFactory;
external _ng.AppView<_user.OnPushChildComponent> viewFactory_OnPushChildComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewOnPushChildComponent0 extends _ng.AppView<_user.OnPushChildComponent> {
  external ViewOnPushChildComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class StatefulComponent.
external List<dynamic> get styles$StatefulComponent;
external _ng.ComponentFactory<_user.StatefulComponent> get StatefulComponentNgFactory;
external _ng.AppView<_user.StatefulComponent> viewFactory_StatefulComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewStatefulComponent0 extends _ng.AppView<_user.StatefulComponent> {
  external ViewStatefulComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
}
// For @Component class DefaultComponent.
external List<dynamic> get styles$DefaultComponent;
external _ng.ComponentFactory<_user.DefaultComponent> get DefaultComponentNgFactory;
external _ng.AppView<_user.DefaultComponent> viewFactory_DefaultComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
class ViewDefaultComponent0 extends _ng.AppView<_user.DefaultComponent> {
  external ViewDefaultComponent0(_ng.AppView<dynamic> parentView, int parentIndex);
}

external void initReflector();

// GENERATED CODE - DO NOT MODIFY BY HAND

// **************************************************************************
// Generator: TemplateGenerator
// **************************************************************************

// ignore_for_file: cancel_subscriptions,constant_identifier_names,duplicate_import,non_constant_identifier_names,library_prefixes,UNUSED_IMPORT,UNUSED_SHOWN_NAME
import 'generated_injectors.dart';
export 'generated_injectors.dart';
import 'package:angular/angular.dart';
import 'generated_injectors.template.dart' as ng;
// Required for initReflector().
import 'generated_injectors.template.dart' as _ref0;
import 'package:angular/angular.template.dart'
    as _ref1;

// *** EXPERIMENTAL ** Injector Generator [START]
import 'package:angular/src/di/injector/injector.dart'
    as _1;
import 'generated_injectors.dart' as _2;

_1.Injector doGenerate$Injector([_1.Injector parent]) =>
    new _Injector$doGenerate._(parent);

class _Injector$doGenerate extends _1.GeneratedInjector {
  _Injector$doGenerate._([_1.Injector parent]) : super(parent);

  _2.ExamplePrime _field0;

  @override
  Object injectFromSelfOptional(Object token,
      [Object orElse = _1.throwIfNotFound]) {
    if (identical(token, _2.Example)) {
      return _field0 ??= new _2.ExamplePrime();
    }
    return orElse;
  }
}
// *** EXPERIMENTAL ** Injector Generator [END]

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;
  _ref0.initReflector();
  _ref1.initReflector();
}

// GENERATED CODE - DO NOT MODIFY BY HAND

// **************************************************************************
// Generator: TemplateGenerator
// **************************************************************************

// ignore_for_file: cancel_subscriptions,constant_identifier_names,duplicate_import,non_constant_identifier_names,library_prefixes,UNUSED_IMPORT,UNUSED_SHOWN_NAME
import 'generated_injectors.dart';
export 'generated_injectors.dart';
import 'package:angular/angular.dart';
import 'generated_injectors.template.dart' as ng;
// Required for initReflector().
import 'generated_injectors.template.dart' as _ref0;
import 'package:angular/angular.template.dart'
    as _ref1;

import 'package:angular/src/di/injector/injector.dart'
    as _injector;

var _visited = false;
void initReflector() {
  if (_visited) {
    return;
  }
  _visited = true;
  _ref0.initReflector();
  _ref1.initReflector();
}

_injector.Injector doGenerate$Injector([_injector.Injector parent]) =>
    new _doGenerate$Injector(parent);

class _doGenerate$Injector extends _injector.GeneratedInjector {
  _doGenerate$Injector([_injector.Injector parent]) : super(parent);
  @override
  Object injectFromSelfOptional(
    Object token, [
    Object orElse = _injector.throwIfNotFound,
  ]) {
    switch (token) {
      case Example:
        return _provide0();
      default:
        return orElse;
    }
  }

  Example _field0;
  Example _provide0() {
    return _field0 ??= new ExamplePrime();
  }
}
